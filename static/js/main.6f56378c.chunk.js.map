{"version":3,"sources":["components/Header.js","components/CadastroCliente.js","App.js","serviceWorker.js","index.js"],"names":["Header","react_default","a","createElement","className","Component","CadastroCliente","src","alt","type","id","name","htmlFor","App","components_Header","components_CadastroCliente","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.6f56378c.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nclass Header extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"page__title text-center\">\r\n                <h1>Cadastro Inicial</h1>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Header;\r\n","import React, { Component } from \"react\";\r\n\r\nclass CadastroCliente extends Component {\r\n    render() {\r\n        return (\r\n            <form className=\"container\">\r\n                <div className=\"foto-container text-center\">\r\n                    <img src=\"../profile-img.jpg\" alt=\"imagem\" />\r\n                </div>\r\n                <div className=\"form-group row\">\r\n                    <label className=\"col-3 col-form-label\">Nome</label>\r\n                    <div className=\"col\">\r\n                        <input type=\"text\" className=\"form-control\" />\r\n                    </div>\r\n                </div>\r\n                <div className=\"form-group row\">\r\n                    <label className=\"col-3 col-form-label\">Telefone</label>\r\n                    <div className=\"col\">\r\n                        <input type=\"tel\" className=\"form-control\" />\r\n                    </div>\r\n                </div>\r\n                <div className=\"form-group row\">\r\n                    <label className=\"col-3 col-form-label\">E-mail</label>\r\n                    <div className=\"col\">\r\n                        <input type=\"email\" className=\"form-control\" />\r\n                    </div>\r\n                </div>\r\n                <div className=\"form-group row\">\r\n                    <label className=\"col-4 col-form-label\">\r\n                        Data de nascimento\r\n                    </label>\r\n                    <div className=\"col\">\r\n                        <input type=\"date\" className=\"form-control\" />\r\n                    </div>\r\n                </div>\r\n                <div className=\"form-group row\">\r\n                    <div className=\"col-sm-2\">\r\n                        Você já teve episódios de alergia a algum produto\r\n                        cosmético?\r\n                    </div>\r\n                    <div className=\"col-sm-10\">\r\n                        <div className=\"custom-control custom-radio custom-control-inline\">\r\n                            <input\r\n                                type=\"radio\"\r\n                                id=\"alergia-sim\"\r\n                                name=\"alergia-sim\"\r\n                                className=\"custom-control-input\"\r\n                            />\r\n                            <label\r\n                                className=\"custom-control-label\"\r\n                                htmlFor=\"alergia-sim\"\r\n                            >\r\n                                Sim\r\n                            </label>\r\n                        </div>\r\n                        <div className=\"custom-control custom-radio custom-control-inline\">\r\n                            <input\r\n                                type=\"radio\"\r\n                                id=\"alergia-nao\"\r\n                                name=\"alergia-nao\"\r\n                                className=\"custom-control-input\"\r\n                            />\r\n                            <label\r\n                                className=\"custom-control-label\"\r\n                                htmlFor=\"alergia-nao\"\r\n                            >\r\n                                Não\r\n                            </label>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"form-group row\">\r\n                    <div className=\"col-sm-2\">Você está grávida?</div>\r\n                    <div className=\"col-sm-10\">\r\n                        <div className=\"custom-control custom-radio custom-control-inline\">\r\n                            <input\r\n                                type=\"radio\"\r\n                                id=\"gravidez-sim\"\r\n                                name=\"gravidez-sim\"\r\n                                className=\"custom-control-input\"\r\n                            />\r\n                            <label\r\n                                className=\"custom-control-label\"\r\n                                htmlFor=\"gravidez-sim\"\r\n                            >\r\n                                Sim\r\n                            </label>\r\n                        </div>\r\n                        <div className=\"custom-control custom-radio custom-control-inline\">\r\n                            <input\r\n                                type=\"radio\"\r\n                                id=\"gravidez-nao\"\r\n                                name=\"gravidez-nao\"\r\n                                className=\"custom-control-input\"\r\n                            />\r\n                            <label\r\n                                className=\"custom-control-label\"\r\n                                htmlFor=\"gravidez-nao\"\r\n                            >\r\n                                Não\r\n                            </label>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <br />\r\n                <hr />\r\n                <br />\r\n                <div className=\"custom-control custom-checkbox\">\r\n                    <input\r\n                        type=\"checkbox\"\r\n                        className=\"custom-control-input\"\r\n                        id=\"autorizacao-fotografia\"\r\n                    />\r\n                    <label\r\n                        className=\"custom-control-label\"\r\n                        htmlFor=\"autorizacao-fotografia\"\r\n                    >\r\n                        Autorizo o registro fotográfico do resultado do meu\r\n                        tratamento capilar para o controle do atendimento por\r\n                        mim recebido\r\n                    </label>\r\n                </div>\r\n                <br />\r\n                <button type=\"submit\" className=\"btn btn-success\">\r\n                    Concluir\r\n                </button>\r\n                <br />\r\n            </form>\r\n        );\r\n    }\r\n}\r\n\r\nexport default CadastroCliente;\r\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport Header from \"./components/Header\";\nimport CadastroCliente from \"./components/CadastroCliente\";\n\nclass App extends Component {\n    render() {\n        return (\n            <div className=\"App\">\n                <Header />\n                <main className=\"container-fluid\">\n                    <CadastroCliente />\n                </main>\n            </div>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport \"bootstrap\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}