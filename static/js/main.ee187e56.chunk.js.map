{"version":3,"sources":["components/inputField.js","actions/index.js","actions/cabeleireiro.js","actions/types.js","forms/cabeleireiroCadastro.js","containers/Cadastro.js","history.js","actions/cliente.js","forms/clienteForm.js","components/itemCliente.js","components/listaClientes.js","forms/produtoForm.js","containers/Clientes.js","containers/Header.js","containers/Home.js","containers/Landing.js","forms/loginForm.js","containers/Login.js","actions/produto.js","components/itemProduto.js","components/listaProdutos.js","containers/Produtos.js","forms/servicoFormPage1.js","forms/servicoFormPage2.js","forms/servicoForm.js","actions/servico.js","containers/Servico.js","forms/cabeleireiroEditar.js","containers/EditarCadastro.js","App.js","reducers/index.js","reducers/reducer_clientes.js","reducers/reducer_cabeleireiros.js","reducers/reducer_produtos.js","reducers/reducer_servicos.js","serviceWorker.js","index.js"],"names":["inputField","_ref","input","label","type","_ref$meta","meta","touched","error","warning","react_default","a","createElement","className","Object","assign","placeholder","api","create","baseURL","fetchCabeleireiro","id","_ref3","asyncToGenerator","regenerator_default","mark","_callee3","dispatch","response","wrap","_context3","prev","next","get","concat","sent","console","log","payload","stop","_x4","apply","this","arguments","editCabeleireiro","formValues","_ref4","_callee4","_context4","patch","data","_x5","history","require","createBrowserHistory","CabeleireiroCadastro","props","createCabeleireiro","push","_this$props","handleSubmit","pristine","reset","submitting","onSubmit","bind","Field","name","component","disabled","onClick","Component","reduxForm","form","connect","_callee","getState","_context","post","objectSpread","_x","_x2","Cadastro","cabeleireiroCadastro","fetchClientes","_ref2","_callee2","_context2","_x3","ClienteForm","createCliente","map","sexoOption","value","key","ItemCliente","clientes","nome","telefone","Telefone","email","Email","ListaClientes","_","itemCliente","_id","renderClientes","max","min","state","Clientes","clienteForm","listaClientes","Header","react_router_dom","to","src","alt","Home","Landing","CadastroForm","Login","loginForm","required","undefined","maxLength15","length","minValue18","number","isNaN","Number","tooOld","ProdutoForm","createProduto","renderField","validate","warn","ItemProduto","produtos","categoria","marca","linha","descricao","conteudo","medida","ListaProdutos","fetchProdutos","itemProduto","scope","renderProdutos","Produtos","produtoForm","listaProdutos","destroyOnUnmount","forceUnregisterOnUnmount","previousPage","servicos","defaultValues","currentTime","Date","month","getMonth","day","getDate","year","getFullYear","join","ServicoForm","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","nextPage","assertThisInitialized","page","setState","fetchServicos","createServico","servicoFormPage1","servicoFormPage2","renderServicos","initialValues","Servico","servicoForm","CabeleireiroEditar","EditarCadastro","match","params","cabeleireiro","cabeleireiroEditar","pick","ownProps","cabeleireiros","App","containers_Header","react_router","exact","path","Editar","rootReducer","combineReducers","action","defineProperty","omit","formReducer","Boolean","window","location","hostname","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","reducers","applyMiddleware","reduxThunk","ReactDOM","render","es","BurgerMenu","pageWrapId","src_App_0","document","querySelector","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.ee187e56.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst inputField = ({ input, label, type, meta: { touched, error, warning } }) => (\r\n    <div className=\"form-group row\">\r\n        <label className=\"col-2\">{label}</label>\r\n        <div className=\"col-10\">\r\n            <input className=\"form-control\" {...input} placeholder={label} type={type} />\r\n            {touched && ((error && <span>{error}</span>) || (warning && <span>{warning}</span>))}\r\n        </div>\r\n    </div>\r\n);\r\n\r\nexport default inputField;","import { create } from \"apisauce\";\r\n\r\nexport const api = create({\r\n    //baseURL: \"https://sileo.serveo.net\"\r\n    //baseURL: \"http://localhost:3001\"\r\n    baseURL: \"http://localhost:3004\"\r\n});","import { api } from \"./index\";\r\nimport { CREATE_CABELEIREIRO, EDIT_CABELEIREIRO, FETCH_ALL_CABELEIREIROS, FETCH_CABELEIREIRO } from './types';\r\n\r\nexport const createCabeleireiro = formValues => async (dispatch, getState) => {\r\n    const response = await api.post('/Cabeleireiros', { ...formValues });\r\n    dispatch({ type: CREATE_CABELEIREIRO, payload: response });\r\n    // history.push('/Cabeleireiros');\r\n};\r\n\r\nexport const fetchCabeleireiros = () => async dispatch => {\r\n    const response = await api.get('/Cabeleireiros');\r\n    dispatch({ type: FETCH_ALL_CABELEIREIROS, payload: response });\r\n};\r\n\r\nexport const fetchCabeleireiro = id => async dispatch => {\r\n    const response = await api.get(`/Cabeleireiros/${id}`);\r\n    console.log(response);\r\n    dispatch({ type: FETCH_CABELEIREIRO, payload: response });\r\n};\r\n\r\nexport const editCabeleireiro = (id, formValues) => async dispatch => {\r\n    console.log(\"id: \" + id);\r\n    console.log(formValues);\r\n\r\n\r\n    const response = await api.patch(`/Cabeleireiros/${id}`, formValues);\r\n    dispatch({ type: EDIT_CABELEIREIRO, payload: response.data });\r\n    // history.push('/Home');\r\n};\r\n","export const FETCH_ALL_CABELEIREIROS = \"FETCH_ALL_CABELEIREIROS\";\r\nexport const FETCH_CABELEIREIRO = \"FETCH_CABELEIREIRO\";\r\nexport const CREATE_CABELEIREIRO = \"CREATE_CABELEIREIRO\";\r\nexport const EDIT_CABELEIREIRO = \"EDIT_CABELEIREIRO\";\r\nexport const DELETE_CABELEIREIRO = \"DELETE_CABELEIREIRO\";\r\n\r\nexport const FETCH_ALL_CLIENTES = \"FETCH_ALL_CLIENTES\";\r\nexport const FETCH_CLIENTE = \"FETCH_CLIENTE\";\r\nexport const CREATE_CLIENTE = \"CREATE_CLIENTE\";\r\nexport const DELETE_CLIENTE = \"DELETE_CLIENTE\";\r\n\r\nexport const FETCH_ALL_PRODUTOS = \"FETCH_ALL_PRODUTOS\";\r\nexport const FETCH_PRODUTO = \"FETCH_PRODUTO\";\r\nexport const CREATE_PRODUTO = \"CREATE_PRODUTO\";\r\nexport const DELETE_PRODUTO = \"DELETE_PRODUTO\";\r\n\r\nexport const FETCH_ALL_SERVICOS = \"FETCH_ALL_SERVICOS\";\r\nexport const FETCH_SERVICO = \"FETCH_SERVICO\";\r\nexport const CREATE_SERVICO = \"CREATE_SERVICO\";\r\nexport const DELETE_SERVICO = \"DELETE_SERVICO\";\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport inputField from \"../components/inputField\";\r\nimport { createCabeleireiro } from '../actions/cabeleireiro';\r\nimport '../style/general.scss';\r\n\r\nlet history = require(\"history\").createBrowserHistory;\r\n\r\nclass CabeleireiroCadastro extends Component {\r\n    onSubmit(props) {\r\n        this.props.createCabeleireiro(props, () => {\r\n            history.push('/');\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const { handleSubmit, pristine, reset, submitting } = this.props;\r\n        return (\r\n            <form className=\"container\" onSubmit={handleSubmit(this.onSubmit.bind(this))}>\r\n                <div className=\"text-center\"><h1>Cadastro de Cabeleireiro</h1></div>\r\n                <hr />\r\n                <Field name=\"nome\" label=\"Nome\" component={inputField}\r\n                    type=\"text\" />\r\n                <Field name=\"sobrenome\" label=\"Sobrenome\" component={inputField}\r\n                    type=\"text\" />\r\n                <Field name=\"cnpj\" label=\"CNPJ\" component={inputField}\r\n                    type=\"number\" />\r\n                <Field name=\"telefone\" label=\"Telefone\" component={inputField}\r\n                    type=\"tel\" />\r\n                <Field name=\"email\" label=\"E-mail\" component={inputField}\r\n                    type=\"email\" />\r\n                <Field name=\"dataNascimento\" label=\"Data de nascimento\" component={inputField}\r\n                    type=\"date\" />\r\n                <Field name=\"senha\" label=\"Senha\" component={inputField}\r\n                    type=\"password\" />\r\n                <Field name=\"repetirSenha\" label=\"Repita a Senha\" component={inputField}\r\n                    type=\"password\" />\r\n                <br />\r\n                <div className=\"button-group d-flex justify-content-around\">\r\n                    <button type=\"submit\" className=\"btn btn-success\" disabled={pristine || submitting}>\r\n                        Cadastrar\r\n                        </button>\r\n                    <button type=\"button\" className=\"btn btn-danger\" disabled={pristine || submitting}\r\n                        onClick={reset}>\r\n                        Cancelar\r\n                        </button>\r\n                </div>\r\n                <br />\r\n            </form >\r\n        );\r\n    }\r\n}\r\n\r\n// reduxForm: 1st is form config\r\n// connect: first argument is mapStateToProps, 2nd is mapDispatchToProps\r\nexport default reduxForm({\r\n    form: 'cabeleireiroCadastro'\r\n})(\r\n    connect(null, { createCabeleireiro })(CabeleireiroCadastro)\r\n);","import React, { Component } from 'react';\r\nimport CabeleireiroCadastro from \"../forms/cabeleireiroCadastro\";\r\n\r\n\r\nclass Cadastro extends Component {\r\n    render() {\r\n        return (\r\n            <CabeleireiroCadastro onSubmit={this.onSubmit} />\r\n        );\r\n    }\r\n}\r\n\r\nexport default Cadastro;","import { createBrowserHistory } from 'history'\r\n\r\nexport default createBrowserHistory({\r\n    /* pass a configuration object here if needed */\r\n})","import { api } from \"./index\";\r\nimport history from '../history';\r\nimport { CREATE_CLIENTE, FETCH_ALL_CLIENTES } from './types';\r\n\r\nexport const createCliente = formValues => async (dispatch, getState) => {\r\n    const response = await api.post('/Clientes', { ...formValues });\r\n    dispatch({ type: CREATE_CLIENTE, payload: response });\r\n    history.push('/Clientes');\r\n};\r\n\r\nexport const fetchClientes = () => async dispatch => {\r\n    const response = await api.get('/Clientes');\r\n    dispatch({ type: FETCH_ALL_CLIENTES, payload: response });\r\n};","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { createCliente } from '../actions/cliente';\r\nimport '../style/general.scss';\r\n\r\nlet history = require(\"history\").createBrowserHistory;\r\n\r\nclass ClienteForm extends Component {\r\n    onSubmit(props) {\r\n        this.props.createCliente(props, () => {\r\n            history.push('/');\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const sexo = [\"Feminino\", \"Masculino\", \"Outro\", \"Prefiro não informar\"];\r\n        const { handleSubmit, pristine, reset, submitting } = this.props;\r\n        return (\r\n            <form className=\"container\" onSubmit={handleSubmit(this.onSubmit.bind(this))}>\r\n            <div className=\"text-center\"><h1>Cadastro de Cliente</h1></div>\r\n            <hr/>\r\n                <div className=\"form-group row\">\r\n                    <label className=\"col-2\">Nome</label>\r\n                    <div className=\"col-10\">\r\n                        <Field name=\"nome\" className=\"form-control\" component=\"input\" type=\"text\"\r\n                            placeholder=\"Nome completo\"\r\n                        />\r\n                    </div>\r\n                </div>\r\n                <div className=\"form-group row\">\r\n                    <label className=\"col-2\">Sexo</label>\r\n                    <div className=\"col-10\">\r\n                        <Field name=\"sexo\" className=\"form-control\" component=\"select\">\r\n                            {sexo.map(sexoOption =>\r\n                                <option value={sexoOption} key={sexoOption}>{sexoOption}</option>)}\r\n                        </Field></div>\r\n                </div>\r\n                <div className=\"form-group row\">\r\n                    <label className=\"col-2\">CPF</label>\r\n                    <div className=\"col-10\">\r\n                        <Field name=\"cpf\" className=\"form-control\" component=\"input\" type=\"number\" placeholder=\"\"\r\n                        />\r\n                    </div>\r\n                </div>\r\n                <div className=\"form-group row\">\r\n                    <label className=\"col-4\">Data de nascimento</label>\r\n                    <div className=\"col-8\">\r\n                        <Field name=\"dataNascimento\" className=\"form-control\" component=\"input\" type=\"date\"\r\n                            placeholder=\"\" />\r\n                    </div>\r\n                </div>\r\n                <div className=\"form-group row\">\r\n                    <label className=\"col-2\">Telefone</label>\r\n                    <div className=\"col-10\">\r\n                        <Field name=\"telefone\" className=\"form-control\" component=\"input\" type=\"text\"\r\n                            placeholder=\"\" />\r\n                    </div>\r\n                </div>\r\n                <div className=\"form-group row\">\r\n                    <label className=\"col-2\">E-mail</label>\r\n                    <div className=\"col-10\">\r\n                        <Field name=\"email\" className=\"form-control\" component=\"input\" type=\"email\" placeholder=\"\"\r\n                        />\r\n                    </div>\r\n                </div>\r\n                <div className=\"form-group formCheck\">\r\n                    <label className=\"col-12\">Você já teve episódios de alergia a algum produto cosmético?</label>\r\n                    <div className=\"form-check form-check-inline\" >\r\n                        <label className=\"form-check-label formButton1\">\r\n                            <Field name=\"alergias\" className=\"form-check-input\" component=\"input\" type=\"radio\"\r\n                                value=\"true\" />\r\n                            Sim</label>\r\n                        <label className=\"form-check-label formButton2\">\r\n                            <Field name=\"alergias\" className=\"form-check-input\" component=\"input\" type=\"radio\"\r\n                                value=\"false\" />\r\n                            Não</label>\r\n                    </div>\r\n                </div>\r\n                <div className=\"form-group formCheck\">\r\n                    <label className=\"col-12\">Você está em período de gravidez?</label>\r\n                    <div className=\"form-check form-check-inline\">\r\n                        <label className=\"form-check-label formButton1\">\r\n                            <Field name=\"gestante\" className=\"form-check-input\" component=\"input\" type=\"radio\"\r\n                                value=\"true\" />\r\n                            Sim</label>\r\n                        <label className=\"form-check-label formButton2\">\r\n                            <Field name=\"gestante\" className=\"form-check-input\" component=\"input\" type=\"radio\"\r\n                                value=\"false\" />\r\n                            Não\r\n                            </label>\r\n                    </div>\r\n                </div>\r\n                <br />\r\n                <div className=\"button-group d-flex justify-content-around\">\r\n                    <button type=\"submit\" className=\"btn btn-success\" disabled={pristine || submitting}>\r\n                        Cadastrar\r\n                        </button>\r\n                    <button type=\"button\" className=\"btn btn-danger\" disabled={pristine || submitting}\r\n                        onClick={reset}>\r\n                        Cancelar\r\n                        </button>\r\n                </div>\r\n                <br />\r\n            </form>\r\n        );\r\n    }\r\n}\r\n\r\n// reduxForm: 1st is form config\r\n// connect: first argument is mapStateToProps, 2nd is mapDispatchToProps\r\nexport default reduxForm({\r\n    form: 'clienteForm'\r\n})(\r\n    connect(null, { createCliente })(ClienteForm)\r\n);","import React from \"react\";\r\n//import moment from \"moment\";\r\n\r\nconst ItemCliente = ({ clientes }) => {\r\n    //const key = (clientes.id).slice(-4);\r\n    //const key = clientes.id;\r\n    const nome = clientes.nome;\r\n    const telefone = clientes.Telefone;\r\n    //const cpf = clientes.CPF;\r\n    //const dataNasc = moment(clientes.DataNascimento).format('DD/MM/YYYY');\r\n    const email = clientes.Email;\r\n\r\n    return (\r\n        <div className=\"list-group-item list-group-item-action flex-column align-items-start\">\r\n            <div className=\"d-flex w-100 justify-content-between\">\r\n                <h5 className=\"mb-1\">{nome}</h5>\r\n                {/* <small>{dataNasc}</small> */}\r\n            </div>\r\n            <p className=\"mb-1\">{email}</p>\r\n            <p className=\"mb-1\">{telefone}</p>\r\n        </div>\r\n\r\n    );\r\n};\r\n\r\nexport default ItemCliente;","import _ from \"lodash\";\r\nimport React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { fetchClientes } from \"../actions/cliente\";\r\nimport ItemCliente from \"./itemCliente\";\r\n\r\nclass ListaClientes extends Component {\r\n    componentWillMount() {\r\n        this.props.fetchClientes();\r\n    }\r\n\r\n    renderClientes() {\r\n        return _.map(this.props.clientes, clientes => {\r\n            return <ItemCliente key={clientes._id} clientes={clientes} />;\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"list-group\">\r\n                {this.renderClientes()}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return { clientes: state.clientes };\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    { fetchClientes }\r\n)(ListaClientes);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { createProduto } from '../actions/produto';\r\nimport '../style/general.scss';\r\n\r\nlet history = require(\"history\").createBrowserHistory;\r\n\r\nconst required = value => value ? undefined : 'Campo obrigatório'\r\nconst maxLength = max => value =>\r\n    value && value.length > max ? `Este campo recebe no máximo ${max} caracteres` : undefined\r\nconst maxLength15 = maxLength(30)\r\nconst minValue = min => value =>\r\n    value && value < min ? `Must be at least ${min}` : undefined\r\nconst minValue18 = minValue(1)\r\nconst number = value => value && isNaN(Number(value)) ? 'Este campo permite somente números' : undefined\r\nconst tooOld = value =>\r\n    value && value > 5000 ? 'O valor máximo permitido é 5000' : undefined\r\n\r\nclass ProdutoForm extends Component {\r\n    onSubmit(props) {\r\n        this.props.createProduto(props, () => {\r\n            history.push('/Produtos');\r\n        });\r\n    }\r\n    render() {\r\n        const { handleSubmit, pristine, reset, submitting } = this.props;\r\n        const renderField = ({ input, label, type, meta: { touched, error, warning } }) => (\r\n            <div className=\"form-group row\">\r\n                <label className=\"col-2\">{label}</label>\r\n                <div className=\"col-10\">\r\n                    <input className=\"form-control\" {...input} placeholder={label} type={type} />\r\n                    {touched && ((error && <span>{error}</span>) || (warning && <span>{warning}</span>))}\r\n                </div>\r\n            </div>\r\n        )\r\n\r\n        return (\r\n            <form className=\"container formMobileProd\" onSubmit={handleSubmit(this.onSubmit.bind(this))}>\r\n                <div className=\"text-center\"><h1>Cadastro de Produto</h1></div>\r\n                <hr />\r\n                {/* <div className=\"form-group row\">\r\n                    <label className=\"col-2\">Categoria</label>\r\n                    <div className=\"col-10\">\r\n                        <Field name=\"categoria\" component=\"select\">\r\n                            <option value=\"shampoo\" defaultValue>shampoo</option>\r\n                            <option value=\"coloração\">coloração</option>\r\n                        </Field>\r\n                    </div>\r\n                </div> */}\r\n                <Field name=\"categoria\" label=\"Categoria\" component={renderField} validate={[required, maxLength15]} />\r\n                <Field name=\"marca\" label=\"Marca\" component={renderField} type=\"text\"\r\n                    placeholder=\"Ex.: Loreal\" validate={[required, maxLength15]}\r\n                />\r\n                <Field name=\"linha\" label=\"Linha\" component={renderField} type=\"text\"\r\n                    placeholder=\"Ex.: Kids\" validate={[required, maxLength15]}\r\n                />\r\n                <Field name=\"descricao\" label=\"Descrição\" component={renderField} type=\"text\" validate={[required, maxLength15]} />\r\n                <Field name=\"conteudo\" label=\"Conteúdo\" component={renderField} type=\"number\"\r\n                    placeholder=\"500\" validate={[required, number, minValue18]} warn={tooOld}\r\n                />\r\n                {/* <Field name=\"medida\" component=\"select\">\r\n                            <option value=\"ml\">ml</option>\r\n                            <option value=\"l\">l</option>\r\n                            <option value=\"mg\">mg</option>\r\n                            <option value=\"g\">g</option>\r\n                            <option value=\"kg\">kg</option>\r\n                        </Field> */}\r\n                <Field name=\"medida\" label=\"Medida\" component={renderField} validate={[required, maxLength15]} />\r\n                <br />\r\n                <div className=\"button-group d-flex justify-content-around\">\r\n                    <button type=\"submit\" className=\"btn btn-success\" disabled={pristine || submitting}\r\n                        onSubmit={reset}>\r\n                        Cadastrar\r\n                        </button>\r\n                    <button type=\"button\" className=\"btn btn-danger\" disabled={pristine || submitting} onClick={reset}>\r\n                        Cancelar\r\n                        </button>\r\n                </div>\r\n                <br />\r\n                {/* <p className=\"text-center\">Dúvidas ao cadastrar o produto? <a href=\"\">Clique aqui</a></p> */}\r\n            </form >\r\n        );\r\n    }\r\n}\r\n\r\n//reduxForm: 1st is form config\r\n//connect: first argument is mapStateToProps, 2nd is mapDispatchToProps\r\nexport default reduxForm({\r\n    form: 'produtoForm'\r\n})(\r\n    connect(null, { createProduto })(ProdutoForm)\r\n);","import React, { Component } from 'react';\r\nimport ClienteForm from \"../forms/clienteForm\";\r\nimport ListaClientes from \"../components/listaClientes\";\r\n\r\nclass Clientes extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <ClienteForm onSubmit={this.onSubmit} />\r\n                <ListaClientes />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Clientes;","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass Header extends Component {\r\n    render() {\r\n        return (\r\n            <header className=\"text-center\">\r\n                <ul className=\"nav justify-content-between\">\r\n                    <li className=\"nav-item\">\r\n                        {/* <h5>Olá, Pricila</h5> */}\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        {/* <Link to=\"/\">\r\n                            Início\r\n                    </Link> */}\r\n                    </li>\r\n                </ul>\r\n                <div className=\"header-logo\">\r\n                    <Link to=\"/Home\">\r\n                        <img src=\"/img/logo-tifs.png\" alt=\"\" />\r\n                    </Link>\r\n                </div>\r\n            </header>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Header;\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass Home extends Component {\r\n    render() {\r\n        return (\r\n            <main className=\"container-fluid\">\r\n                <div className=\"row d-flex justify-content-around\">\r\n                    <Link to=\"/Servico\" className=\"btn m-2 btn-dark col-5\">Novo Servico</Link>\r\n                    <Link to=\"/Clientes\" className=\"btn m-2 btn-dark col-5\">Meus Clientes</Link>\r\n                    <Link to=\"/Historico\" className=\"btn m-2 btn-dark col-5\">Histórico de serviços</Link>\r\n                    <Link to=\"/Relatorios\" className=\"btn m-2 btn-dark col-5\">Relatórios</Link>\r\n                    <Link to=\"/Produtos\" className=\"btn m-2 btn-dark col-5\">Produtos</Link>\r\n                </div>\r\n            </main>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Home;","import React, { Component } from 'react';\r\nimport { Link } from \"react-router-dom\";\r\n//import { Router, Route, Switch } from \"react-router-dom\";\r\n\r\nclass Landing extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"row d-flex justify-content-around\">\r\n                <Link to=\"/Cadastro\" className=\"btn m-2 btn-dark col-2\">Cadastrar</Link>\r\n                <Link to=\"/Login\" className=\"btn m-2 btn-dark col-2\">Login</Link>\r\n            </div>\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default Landing;","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport inputField from \"../components/inputField\";\r\nimport { fetchCabeleireiro } from '../actions/cabeleireiro';\r\nimport '../style/general.scss';\r\n\r\nlet history = require(\"history\").createBrowserHistory;\r\n\r\nclass CadastroForm extends Component {\r\n    onSubmit(props) {\r\n        this.props.fetchCabeleireiro(props, () => {\r\n            history.push('/');\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const { handleSubmit, pristine, reset, submitting } = this.props;\r\n        return (\r\n            <form className=\"container\" onSubmit={handleSubmit(this.onSubmit.bind(this))}>\r\n                <div className=\"text-center\"><h1>Login</h1></div>\r\n                <hr />\r\n                <Field name=\"email\" label=\"E-mail\" component={inputField}\r\n                    type=\"email\" />\r\n                <Field name=\"senha\" label=\"Senha\" component={inputField}\r\n                    type=\"password\" />\r\n                <br />\r\n                <div className=\"button-group d-flex justify-content-around\">\r\n                    <button type=\"submit\" className=\"btn btn-success\" disabled={pristine || submitting}>\r\n                        Entrar\r\n                        </button>\r\n                    <button type=\"button\" className=\"btn btn-danger\" disabled={pristine || submitting}\r\n                        onClick={reset}>\r\n                        Cancelar\r\n                        </button>\r\n                </div>\r\n                <br />\r\n            </form >\r\n        );\r\n    }\r\n}\r\n\r\n// reduxForm: 1st is form config\r\n// connect: first argument is mapStateToProps, 2nd is mapDispatchToProps\r\nexport default reduxForm({\r\n    form: 'cadastroForm'\r\n})(\r\n    connect(null, { fetchCabeleireiro })(CadastroForm)\r\n);","import React, { Component } from 'react';\r\nimport LoginForm from \"../forms/loginForm\";\r\n\r\n\r\nclass Login extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <LoginForm onSubmit={this.onSubmit} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Login;","import { api } from \"./index\";\r\nimport history from '../history';\r\nimport { CREATE_PRODUTO, FETCH_PRODUTO, FETCH_ALL_PRODUTOS, DELETE_PRODUTO } from './types';\r\n\r\nexport const createProduto = formValues => async (dispatch, getState) => {\r\n    const response = await api.post('/Produtos', { ...formValues });\r\n    dispatch({ type: CREATE_PRODUTO, payload: response });\r\n    history.push('/Produtos');\r\n};\r\n\r\nexport const fetchProdutos = () => async dispatch => {\r\n    const response = await api.get('/Produtos');\r\n    dispatch({ type: FETCH_ALL_PRODUTOS, payload: response });\r\n};\r\nexport const fetchProduto = id => async dispatch => {\r\n    const response = await api.get(`/Produtos/${id}`);\r\n    dispatch({ type: FETCH_PRODUTO, payload: response });\r\n};\r\n\r\n// export const editProduto = id => async dispatch => {\r\n//     const response = await api.put('/Produtos/', { ...formValues });\r\n//     dispatch({ type: FETCH_PRODUTO, payload: response });\r\n// };\r\n\r\nexport const deleteProdutos = id => async dispatch => {\r\n    const response = await api.delete(`/Produtos/${id}`);\r\n    dispatch({ type: DELETE_PRODUTO, payload: id });\r\n    console.log(response);\r\n\r\n    history.push('/Produtos');\r\n};","import React from \"react\";\r\n\r\nconst ItemProduto = ({ produtos }) => {\r\n    const key = produtos._id;\r\n    const categoria = produtos.categoria;\r\n    const marca = produtos.marca;\r\n    const linha = produtos.linha;\r\n    const descricao = produtos.descricao;\r\n    const conteudo = produtos.conteudo;\r\n    const medida = produtos.medida;\r\n\r\n    return (\r\n        <tr>\r\n            <td>{key}</td>\r\n            <td>{categoria}</td>\r\n            <td>{marca}</td>\r\n            <td>{linha}</td>\r\n            <td>{descricao}</td>\r\n            <td>{conteudo}</td>\r\n            <td>{medida}</td>\r\n            {/* <td><span><a href=\"\"><img src=\"/img/logo/edit.png\" alt=\"Editar produto\" />Editar produto</a></span></td> */}\r\n            <td> <img src=\"/img/icon/delete.png\" alt=\"Remover produto\" /></td>\r\n        </tr>\r\n    );\r\n};\r\n\r\nexport default ItemProduto;","import _ from \"lodash\";\r\nimport React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { fetchProdutos } from \"../actions/produto\";\r\nimport ItemProduto from \"./itemProduto\";\r\n\r\nclass ListaProdutos extends Component {\r\n    componentWillMount() {\r\n        this.props.fetchProdutos();\r\n    }\r\n\r\n    renderProdutos() {\r\n        return _.map(this.props.produtos, produtos => {\r\n            return <ItemProduto key={produtos._id} produtos={produtos} />;\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <table className=\"table\">\r\n                <thead>\r\n                    <tr>\r\n                        <th scope=\"col-2\">ID</th>\r\n                        <th scope=\"col-1\">Categoria</th>\r\n                        <th scope=\"col-2\">Marca</th>\r\n                        <th scope=\"col-2\">Linha</th>\r\n                        <th scope=\"col-3\">Descricao</th>\r\n                        <th scope=\"col\">Conteúdo</th>\r\n                        <th scope=\"col\">Medida</th>\r\n                        <th scope=\"col\"><strong>Opções</strong></th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {this.renderProdutos()}\r\n                </tbody>\r\n            </table>\r\n        );\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return { produtos: state.produtos };\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    { fetchProdutos }\r\n)(ListaProdutos);\r\n","import React, { Component } from 'react';\r\nimport ProdutoForm from \"../forms/produtoForm\";\r\nimport ListaProdutos from '../components/listaProdutos';\r\n\r\nclass Produtos extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <ProdutoForm onSubmit={this.onSubmit} />\r\n                <ListaProdutos />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Produtos;","import React from 'react';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport '../style/general.scss';\r\n\r\nconst ServicoFormPage1 = (props) => {\r\n    const { handleSubmit, clientes } = props\r\n\r\n    return (\r\n        <form className=\"container\" onSubmit={handleSubmit}>\r\n            <div className=\"text-center\"><h1>Cadastro de Serviço</h1></div>\r\n            <hr/>\r\n            <div className=\"form-group row\">\r\n                    <label className=\"col-2\">Data</label>\r\n                    <div className=\"col-10\">\r\n                        <Field name=\"data\" className=\"form-control\" component=\"input\" type=\"date\"\r\n                            placeholder=\"\" />\r\n                    </div>\r\n                </div>\r\n\r\n            <div className=\"form-group row\">\r\n                    <label className=\"col-2\">Cliente</label>\r\n                    <div className=\"col-10\">\r\n                        <Field name=\"cliente\" className=\"form-control\" component=\"select\">\r\n                        {clientes}\r\n                        </Field></div>\r\n                </div>\r\n            <div className=\"form-group textAreaService\">\r\n                <label className=\"col-12 text-center\">Observações sobre o cliente</label>\r\n                <div className=\"col-12\" >\r\n                    <Field name=\"anotacoes\" component=\"textarea\" />\r\n                    {/* <Field name=\"observacoes\" component=\"textarea\" /> */}\r\n                </div>\r\n            </div>\r\n            <button type=\"submit\" className=\"btn btn-success buttonService\">\r\n                Próximo\r\n                </button>\r\n        </form >\r\n\r\n    )\r\n}\r\n\r\nexport default reduxForm({\r\n    form: 'servicoForm',                 // <------ same form name\r\n    destroyOnUnmount: false,        // <------ preserve form data\r\n    forceUnregisterOnUnmount: true  // <------ unregister fields on unmount\r\n\r\n})(ServicoFormPage1)","import React from 'react';\r\nimport { Field, reduxForm } from 'redux-form';\r\n\r\nconst ServicoFormPage2 = (props) => {\r\n    const { handleSubmit, previousPage, servicos } = props\r\n\r\n    return (\r\n        <form className=\"container\" onSubmit={handleSubmit}>\r\n            <div className=\"text-center\"><h1>Cadastro de Serviço</h1></div>\r\n            <div className=\"form-group row\">\r\n                <label className=\"col-3\">Serviço</label>\r\n                <div className=\"col-9\">\r\n                    {/* <Field name=\"servico\" component=\"select\"> */}\r\n                    <Field name=\"nome\" component=\"select\">\r\n                        {servicos}\r\n                    </Field>\r\n                </div>\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <label className=\"col-12\">Materiais utilizados</label>\r\n                <div className=\"col-12\">\r\n                    <Field name=\"materiais\" component=\"textarea\" />\r\n                    {/* <FormProdutos */}\r\n                    {/* <Field name=\"produto\" component=\"select\">\r\n                        <option>Selecione o servico</option>\r\n                        {produtos}\r\n                    </Field> */}\r\n                </div>\r\n            </div>\r\n            <button type=\"button\" className=\"btn btn-secondary\" onClick={previousPage}>\r\n                Voltar\r\n                </button>\r\n            <button type=\"submit\" className=\"btn btn-success\" >\r\n                Concluído\r\n                </button>\r\n        </form >\r\n\r\n    )\r\n}\r\n\r\nexport default reduxForm({\r\n    form: 'servicoForm',                 // <------ same form name\r\n    destroyOnUnmount: false,        // <------ preserve form data\r\n    forceUnregisterOnUnmount: true  // <------ unregister fields on unmount\r\n\r\n})(ServicoFormPage2)","import _ from \"lodash\";\r\nimport React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { reduxForm } from 'redux-form';\r\nimport { fetchClientes } from '../actions/cliente';\r\nimport { fetchServicos } from '../actions/servico';\r\n//import ServicoOptions from \"./servicoOptions\";\r\nimport ServicoFormPage1 from \"./servicoFormPage1\";\r\nimport ServicoFormPage2 from \"./servicoFormPage2\";\r\nlet history = require(\"history\").createBrowserHistory;\r\n\r\nfunction getDate() {\r\n    var currentTime = new Date(),\r\n        month = '' + (currentTime.getMonth() + 1),\r\n        day = '' + currentTime.getDate(),\r\n        year = currentTime.getFullYear();\r\n\r\n    if (month.length < 2) month = '0' + month;\r\n    if (day.length < 2) day = '0' + day;\r\n\r\n    return [year, month, day].join('-');\r\n}\r\n\r\nconst defaultValues = {\r\n    data: getDate()\r\n}\r\n\r\nclass ServicoForm extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.nextPage = this.nextPage.bind(this)\r\n        this.previousPage = this.previousPage.bind(this)\r\n        this.state = {\r\n            page: 1\r\n        }\r\n    }\r\n    nextPage() {\r\n        this.setState({ page: this.state.page + 1 })\r\n    }\r\n\r\n    previousPage() {\r\n        this.setState({ page: this.state.page - 1 })\r\n    }\r\n\r\n    componentWillMount() {\r\n        this.props.fetchClientes();\r\n        this.props.fetchServicos();\r\n    }\r\n\r\n    renderClientes() {\r\n        return _.map(this.props.clientes, clientes => {\r\n            return <option key={clientes._id} value={clientes.nome}>{clientes.nome}</option>;\r\n        });\r\n    }\r\n\r\n    renderServicos() {\r\n        let id = 0;\r\n        return _.map(this.props.servicos, servicos => {\r\n            return <option key={id++} value={servicos.nome}>{servicos.nome}</option>;\r\n        })\r\n        //this.renderProdutos(servicos.nome));\r\n    }\r\n\r\n    // renderProdutos(nome) {\r\n    //     console.log(this.props.servicos);\r\n    //     console.log(nome);\r\n\r\n    //     return _.map(this.props.servicos.produtos, produtos => {\r\n    //         return <ServicoOptions key={produtos.id} produtos={produtos}></ServicoOptions>\r\n    //     });\r\n    // }\r\n\r\n    onSubmit(props) {\r\n        this.props.createServico(props, () => {\r\n            history.push('/');\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const { handleSubmit } = this.props;\r\n        //const { renderClientes } = this.props;\r\n        const { page } = this.state\r\n        return (\r\n            <div>\r\n                {page === 1 && <ServicoFormPage1 onSubmit={this.nextPage} clientes={this.renderClientes()} />}\r\n                {page === 2 && (\r\n                    <ServicoFormPage2\r\n                        //produtos={this.renderProdutos()}\r\n                        servicos={this.renderServicos()}\r\n                        previousPage={this.previousPage}\r\n                        onSubmit={handleSubmit}\r\n                    />\r\n                )}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    //const selector = formValueSelector('servicoForm')\r\n    return {\r\n        initialValues: defaultValues,\r\n        clientes: state.clientes,\r\n        servicos: state.servicos,\r\n        produtos: state.produtos,\r\n        //selectedServico: selector(state, 'servico') \r\n    };\r\n}\r\n\r\n// Decorate with reduxForm(). It will read the initialValues prop provided by connect()\r\nServicoForm = reduxForm({\r\n    form: 'servicoForm'  // a unique identifier for this form\r\n})(ServicoForm)\r\n\r\n// You have to connect() to any reducers that you wish to connect to yourself\r\nServicoForm = connect(\r\n    mapStateToProps,\r\n    // state => ({\r\n    //     initialValues: defaultValues // pull initial values from account reducer\r\n    // }),\r\n    { fetchClientes, fetchServicos }\r\n)(ServicoForm)\r\n\r\nexport default ServicoForm","import { api } from \"./index\";\r\nimport history from '../history';\r\nimport { CREATE_SERVICO, FETCH_ALL_SERVICOS } from './types';\r\n\r\nexport const fetchServicos = () => async dispatch => {\r\n    const response = await api.get('/servicos/nomes');\r\n    dispatch({ type: FETCH_ALL_SERVICOS, payload: response });\r\n};\r\n\r\nexport const createServico = () => async dispatch => {\r\n    const response = await api.post('/cabeleireiro/5caf9cabb066082354c1cb0a/servicos/');\r\n    dispatch({ type: CREATE_SERVICO, payload: response });\r\n    history.push('/');\r\n};\r\n","import React, { Component } from \"react\";\r\nimport ServicoForm from \"../forms/servicoForm\";\r\n\r\nclass Servico extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <ServicoForm onSubmit={this.onSubmit} />\r\n            </div>)\r\n    }\r\n}\r\n\r\nexport default Servico;\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { editCabeleireiro, fetchCabeleireiro } from '../actions/cabeleireiro';\r\nimport inputField from \"../components/inputField\";\r\nimport '../style/general.scss';\r\n\r\nlet history = require(\"history\").createBrowserHistory;\r\n\r\nclass CabeleireiroEditar extends Component {\r\n    onSubmit(formValues) {\r\n        this.props.onSubmit((formValues), () => {\r\n            history.push('/');\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const { handleSubmit, pristine, reset, submitting } = this.props;\r\n        return (\r\n            <form className=\"container\" onSubmit={handleSubmit(this.onSubmit.bind(this))}>\r\n                <div className=\"text-center\"><h1>Editar perfil</h1></div>\r\n                <hr />\r\n                <Field name=\"nome\" label=\"Nome\" component={inputField}\r\n                    type=\"text\" />\r\n                <Field name=\"sobrenome\" label=\"Sobrenome\" component={inputField}\r\n                    type=\"text\" />\r\n                <Field name=\"cnpj\" label=\"CNPJ\" component={inputField}\r\n                    type=\"number\" />\r\n                <Field name=\"telefone\" label=\"Telefone\" component={inputField}\r\n                    type=\"tel\" />\r\n                <Field name=\"email\" label=\"E-mail\" component={inputField}\r\n                    type=\"email\" />\r\n                <Field name=\"dataNascimento\" label=\"Data de nascimento\" component={inputField}\r\n                    type=\"date\" />\r\n                <Field name=\"senha\" label=\"Senha\" component={inputField}\r\n                    type=\"password\" />\r\n                <Field name=\"repetirSenha\" label=\"Repita a Senha\" component={inputField}\r\n                    type=\"password\" />\r\n                <br />\r\n                <div className=\"button-group d-flex justify-content-around\">\r\n                    <button type=\"submit\" className=\"btn btn-success\" disabled={pristine || submitting}>\r\n                        Cadastrar\r\n                        </button>\r\n                    <button type=\"button\" className=\"btn btn-danger\" disabled={pristine || submitting}\r\n                        onClick={reset}>\r\n                        Cancelar\r\n                        </button>\r\n                </div>\r\n                <br />\r\n            </form >\r\n        );\r\n    }\r\n}\r\n\r\nexport default reduxForm({\r\n    form: 'cabeleireiroEditar'\r\n})(\r\n    connect(null, { fetchCabeleireiro, editCabeleireiro })(CabeleireiroEditar)\r\n);","import _ from 'lodash';\r\nimport React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { editCabeleireiro, fetchCabeleireiro } from '../actions/cabeleireiro';\r\nimport CabeleireiroEditar from \"../forms/cabeleireiroEditar\";\r\n\r\nclass EditarCadastro extends Component {\r\n    componentDidMount() {\r\n        this.props.fetchCabeleireiro(this.props.match.params.id);\r\n    }\r\n    onSubmit = formValues => {\r\n        this.props.editCabeleireiro(this.props.match.params.id, formValues);\r\n    };\r\n\r\n    render() {\r\n        if (!this.props.cabeleireiro) {\r\n            return <div>Loading...</div>;\r\n        }\r\n        return (\r\n            <CabeleireiroEditar\r\n                initialValues={_.pick(this.props.cabeleireiro, 'nome', 'sobrenome', 'cnpj', 'telefone', 'email', 'dataNascimento', 'senha', 'repetirSenha')}\r\n                onSubmit={this.onSubmit} />\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state, ownProps) => {\r\n    return { cabeleireiro: state.cabeleireiros[ownProps.match.params.id] };\r\n};\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    { fetchCabeleireiro, editCabeleireiro }\r\n)(EditarCadastro);","import React, { Component } from \"react\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport \"./App.css\";\r\nimport Cadastro from \"./containers/Cadastro\";\r\nimport Clientes from \"./containers/Clientes\";\r\nimport Header from \"./containers/Header\";\r\nimport Home from \"./containers/Home\";\r\nimport Landing from \"./containers/Landing\";\r\nimport Login from \"./containers/Login\";\r\nimport Produtos from \"./containers/Produtos\";\r\nimport Servico from \"./containers/Servico\";\r\nimport Editar from \"./containers/EditarCadastro\";\r\n\r\nclass App extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <div id=\"page-wrap\">\r\n                <Header />\r\n                <Switch>\r\n                    <Route exact path=\"/\" component={Landing} />\r\n                    <Route exact path=\"/Home\" component={Home} />\r\n                    <Route path=\"/Clientes\" component={Clientes} />\r\n                    <Route path=\"/Produtos\" component={Produtos} />\r\n                    <Route path=\"/Servico\" component={Servico} />\r\n                    <Route path=\"/Editar/:id\" component={Editar} />\r\n                    <Route path=\"/Cadastro\" component={Cadastro} />\r\n                    <Route path=\"/Login\" component={Login} />\r\n                </Switch>\r\n            </div >\r\n        );\r\n    }\r\n}\r\nexport default App;","import { combineReducers } from \"redux\";\r\nimport { reducer as formReducer } from \"redux-form\";\r\nimport ReducerCabeleireiros from \"./reducer_cabeleireiros\";\r\nimport ReducerClientes from \"./reducer_clientes\";\r\nimport ReducerProdutos from \"./reducer_produtos\";\r\nimport ReducerServicos from \"./reducer_servicos\"\r\n\r\nconst rootReducer = combineReducers({\r\n    clientes: ReducerClientes,\r\n    cabeleireiros: ReducerCabeleireiros,\r\n    produtos: ReducerProdutos,\r\n    servicos: ReducerServicos,\r\n    form: formReducer\r\n});\r\n\r\nexport default rootReducer;\r\n","import _ from \"lodash\";\r\nimport { FETCH_ALL_CLIENTES, FETCH_CLIENTE, CREATE_CLIENTE, DELETE_CLIENTE } from \"../actions/types\";\r\n\r\nexport default function (state = {}, action) {\r\n    switch (action.type) {\r\n        case FETCH_ALL_CLIENTES:\r\n            return action.payload.data;\r\n        case FETCH_CLIENTE:\r\n            return { ...state, [action.payload.data.id]: action.payload.data };\r\n        case CREATE_CLIENTE:\r\n            return { ...state, [action.payload.data.id]: action.payload.data };\r\n        case DELETE_CLIENTE:\r\n            return _.omit(state, action.payload.data.id);\r\n        default:\r\n            return state;\r\n    }\r\n}","import _ from \"lodash\";\r\nimport { FETCH_ALL_CABELEIREIROS, FETCH_CABELEIREIRO, CREATE_CABELEIREIRO, DELETE_CABELEIREIRO, EDIT_CABELEIREIRO } from \"../actions/types\";\r\n\r\nexport default function (state = {}, action) {\r\n    switch (action.type) {\r\n        case CREATE_CABELEIREIRO:\r\n            return { ...state, [action.payload.data]: action.payload.data };\r\n        case EDIT_CABELEIREIRO:\r\n            return { ...state, [action.payload.id]: action.payload.data };\r\n        case FETCH_ALL_CABELEIREIROS:\r\n            return action.payload.data;\r\n        case FETCH_CABELEIREIRO:\r\n            return { ...state, [action.payload.data.id]: action.payload.data };\r\n        case DELETE_CABELEIREIRO:\r\n            return _.omit(state, action.payload.data.id);\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const cabeleireiro = data => ({ type: FETCH_CABELEIREIRO, data })","import _ from \"lodash\";\r\nimport { FETCH_ALL_PRODUTOS, FETCH_PRODUTO, CREATE_PRODUTO, DELETE_PRODUTO } from \"../actions/types\";\r\n\r\nexport default function (state = {}, action) {\r\n    switch (action.type) {\r\n        case CREATE_PRODUTO:\r\n            return { ...state, [action.payload.data.id]: action.payload.data };\r\n        case FETCH_ALL_PRODUTOS:\r\n            return action.payload.data;\r\n        case FETCH_PRODUTO:\r\n            return { ...state, [action.payload.data.id]: action.payload.data };\r\n        case DELETE_PRODUTO:\r\n            return _.omit(state, action.payload.data.id);\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import _ from \"lodash\";\r\nimport { FETCH_ALL_SERVICOS, FETCH_SERVICO, CREATE_SERVICO, DELETE_SERVICO } from \"../actions/types\";\r\n\r\nexport default function (state = {}, action) {\r\n    switch (action.type) {\r\n        case FETCH_ALL_SERVICOS:\r\n            return action.payload.data;\r\n        case FETCH_SERVICO:\r\n            return { ...state, [action.payload.data.id]: action.payload.data };\r\n        case CREATE_SERVICO:\r\n            return { ...state, [action.payload.data.id]: action.payload.data };\r\n        case DELETE_SERVICO:\r\n            return _.omit(state, action.payload.data.id);\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import \"bootstrap\";\r\nimport React from \"react\";\r\nimport { pushRotate as Menu } from \"react-burger-menu\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport { Link, Router } from \"react-router-dom\";\r\nimport { applyMiddleware, compose, createStore } from 'redux';\r\nimport reduxThunk from 'redux-thunk';\r\nimport App from \"./App\";\r\nimport history from './history';\r\nimport reducers from \"./reducers\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(\r\n    reducers,\r\n    composeEnhancers(applyMiddleware(reduxThunk))\r\n);\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <Router history={history}>\r\n            <Menu pageWrapId={\"page-wrap\"} >\r\n                <Link to=\"/Editar/1\" className=\"menu-item\">Editar</Link>\r\n                <Link to=\"/Ajuda\" className=\"menu-item\">Ajuda</Link>\r\n                <Link to=\"/Termos\" className=\"menu-item\">Termos</Link>\r\n                <Link to=\"/\" className=\"menu-item\">Sair</Link>\r\n            </Menu>\r\n            <App />\r\n        </Router>\r\n    </Provider>,\r\n    document.querySelector(\"#root\")\r\n);\r\n\r\nserviceWorker.unregister();"],"sourceRoot":""}