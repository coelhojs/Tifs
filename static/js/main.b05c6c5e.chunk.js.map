{"version":3,"sources":["components/clienteForm.js","App.js","history.js","actions/index.js","actions/types.js","components/ItemCliente.js","components/listaClientes.js","containers/Clientes.js","components/servicoFormPage1.js","components/servicoFormPage2.js","components/servicoForm.js","containers/Anamnese.js","containers/Header.js","containers/Menu.js","containers/Home.js","reducers/index.js","reducers/reducer_clientes.js","reducers/reducer_cabeleireiros.js","reducers/reducer_servicos.js","serviceWorker.js","index.js"],"names":["min","max","App","react_default","a","createElement","this","props","children","Component","createBrowserHistory","api","create","baseURL","createCliente","formValues","_ref","Object","asyncToGenerator","regenerator_default","mark","_callee","dispatch","getState","response","wrap","_context","prev","next","post","objectSpread","sent","type","payload","history","push","stop","_x","_x2","apply","arguments","fetchClientes","_ref2","_callee2","_context2","get","_x3","require","required","value","undefined","number","isNaN","Number","renderField","minValueCpf","input","label","_ref$meta","meta","touched","error","warning","assign","placeholder","maxLenght","v","length","ClienteForm","_this$props","handleSubmit","pristine","reset","submitting","className","onSubmit","bind","Field","name","component","validate","map","sexoOption","key","normalize","disabled","onClick","reduxForm","form","connect","ItemCliente","clientes","nome","telefone","Telefone","email","Email","ListaClientes","_","components_ItemCliente","_id","renderClientes","state","Clientes","clienteForm","listaClientes","destroyOnUnmount","forceUnregisterOnUnmount","previousPage","servicos","produtos","defaultValues","data","currentTime","Date","month","getMonth","day","getDate","year","getFullYear","join","ServicoForm","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","nextPage","assertThisInitialized","page","setState","fetchServicos","id","createServico","servicoFormPage1","servicoFormPage2","renderServicos","initialValues","_ref3","_callee3","_context3","_x4","Anamnese","servicoForm","Header","react_router_dom","to","src","alt","Menu","Home","containers_Menu","rootReducer","combineReducers","action","defineProperty","omit","cabeleireiros","console","log","formReducer","Boolean","window","location","hostname","match","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","reducers","applyMiddleware","reduxThunk","ReactDOM","render","es","react_router","src_App_0","containers_Header","exact","path","document","querySelector","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.b05c6c5e.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { createCliente } from '../actions/index';\r\nimport InputMask from 'react-input-mask';\r\n\r\nlet history = require(\"history\").createBrowserHistory;\r\n\r\nconst required = value => value ? undefined : 'Obrigatório';\r\nconst number = value => value && isNaN(Number(value)) ? 'Este campo aceita somente números' : undefined;\r\nconst string = value => value && isNaN(Number(value)) ? 'Este campo aceita somente letras' : undefined;\r\nconst minValue = min => value => value && value < min ? `O campo deve ser maior que ${min} caracteres` : undefined;\r\nconst minValueName = minValue(2);\r\nconst maxValueCpf = max => value => value && value > max ? `O campo deve ter ${max} caracteres` : undefined;\r\nconst valueCpfMax = maxValueCpf(11);\r\nconst minValueCpf = min => value => value && value < min ? `O campo deve ter ${min} caracteres` : undefined;\r\nconst valueCpfMin= minValueCpf(11);\r\n\r\nconst renderField = ({ input, label, type, meta: { touched, error, warning } }) => (\r\n    <div>\r\n        <label>{label}</label>\r\n        <div>\r\n            <input {...input} placeholder={label} type={type}/>\r\n            {touched && ((error && <span>{error}</span>) || (warning && <span>{warning}</span>))}\r\n        </div>\r\n    </div>\r\n);\r\n\r\n\r\nexport const maxLenght = max => value => {\r\n\r\n    let v;\r\n    let result = value.length > max;\r\n\r\n    if(result === false) {\r\n        v = value;\r\n    }\r\n    return v;\r\n};\r\n\r\nclass ClienteForm extends Component {\r\n\r\n\r\n\r\n    onSubmit(props) {\r\n        this.props.createCliente(props, () => {\r\n            history.push('/');\r\n        });\r\n\r\n    }\r\n\r\n\r\n    render() {\r\n        const sexo = [\"Feminino\", \"Masculino\", \"Outros\", \"Prefiro não dizer\"];\r\n\r\n            const {handleSubmit, pristine, reset, submitting} = this.props;\r\n            return (\r\n                <form className=\"container\" onSubmit={handleSubmit(this.onSubmit.bind(this))}>\r\n                    <div className=\"form-group row\">\r\n                        <label className=\"col-4\">Nome</label>\r\n                        <div className=\"col-12\">\r\n                            <Field name=\"nome\" className=\"form-control\" component={renderField} type=\"text\"\r\n                                   placeholder=\"Nome completo\" validate={[required]} \r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"form-group row\">\r\n                        <label className=\"col-3\">Sexo</label>\r\n                        <div className=\"col-9\">\r\n                            <Field name=\"sexo\" className=\"form-control\" component=\"select\">\r\n                                {sexo.map(sexoOption =>\r\n                                    <option value={sexoOption} key={sexoOption}>{sexoOption}</option>)}\r\n                            </Field></div>\r\n                    </div>\r\n                    <div className=\"form-group row\">\r\n                        <label className=\"col-3\">CPF</label>\r\n                        <div className=\"col-9\">\r\n                            <Field name=\"cpf\" className=\"form-control\" component={renderField} type=\"number\" placeholder=\"\"\r\n                                   validate={[required, number]} normalize={maxLenght(11)}/>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"form-group row\">\r\n                        <label className=\"col\">Data de nascimento</label>\r\n                        <div className=\"col-12\">\r\n                            <Field name=\"dataNascimento\" className=\"form-control\" component=\"input\" type=\"date\"\r\n                                   placeholder=\"\" validate={[required]}/>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"form-group row\">\r\n                        <label className=\"col-4\">Telefone</label>\r\n                        <div className=\"col-8\">\r\n                            <Field name=\"telefone\" className=\"form-control\" component=\"input\" type=\"text\"\r\n                                   placeholder=\"\" validate={[required, number]} normalize={maxLenght(11)}/>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"form-group row\">\r\n                        <label className=\"col-4\">E-mail</label>\r\n                        <div className=\"col-12\">\r\n                            <Field name=\"email\" className=\"form-control\" component=\"input\" type=\"email\" placeholder=\"\"\r\n                                   validate={[required]}/>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label>Você já teve episódios de alergia a algum produto cosmético?</label>\r\n                        <div className=\"form-check form-check-inline\">\r\n                            <label className=\"form-check-label\">\r\n                                <Field name=\"alergias\" className=\"form-check-input\" component=\"input\" type=\"radio\"\r\n                                       value=\"true\" validate={[required]}/>\r\n                                Sim</label>\r\n                            <label className=\"form-check-label\">\r\n                                <Field name=\"alergias\" className=\"form-check-input\" component=\"input\" type=\"radio\"\r\n                                       value=\"false\" validate={[required]}/>\r\n                                Não</label>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label>Você está em período de gravidez?</label>\r\n                        <div className=\"form-check form-check-inline\">\r\n                            <label className=\"form-check-label\">\r\n                                <Field name=\"gestante\" className=\"form-check-input\" component=\"input\" type=\"radio\"\r\n                                       value=\"true\" validate={[required]} />\r\n                                Sim</label>\r\n                            <label className=\"form-check-label\">\r\n                                <Field name=\"gestante\" className=\"form-check-input\" component=\"input\" type=\"radio\"\r\n                                       value=\"false\" validate={[required]}/>\r\n                                Não\r\n                            </label>\r\n                        </div>\r\n                    </div>\r\n                    <br/>\r\n                    <div className=\"button-group d-flex justify-content-around\">\r\n                        <button type=\"submit\" className=\"btn btn-success\" disabled={pristine || submitting}>\r\n                            Cadastrar\r\n                        </button>\r\n                        <button type=\"button\" className=\"btn btn-danger\" disabled={pristine || submitting}\r\n                                onClick={reset}>\r\n                            Cancelar\r\n                        </button>\r\n                    </div>\r\n                    <br/>\r\n                </form>\r\n            );\r\n\r\n        }\r\n\r\n}\r\n\r\n// reduxForm: 1st is form config\r\n// connect: first argument is mapStateToProps, 2nd is mapDispatchToProps\r\nexport default reduxForm({\r\n    form: 'clienteForm'\r\n})(\r\n    connect(null, { createCliente })(ClienteForm)\r\n);\r\n","import React, { Component } from \"react\";\r\nimport \"./App.css\";\r\n\r\nclass App extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.props.children}\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default App;\r\n","import { createBrowserHistory } from 'history'\r\n\r\nexport default createBrowserHistory({\r\n    /* pass a configuration object here if needed */\r\n})","import { create } from \"apisauce\";\r\nimport history from '../history';\r\nimport { CREATE_CLIENTE, CREATE_SERVICO, FETCH_CLIENTES, FETCH_SERVICOS } from './types';\r\n\r\nexport const api = create({\r\n    baseURL: \"https://quris.serveo.net\"\r\n    //baseURL: \"http://localhost:3004\"\r\n});\r\n\r\nexport const createCliente = formValues => async (dispatch, getState) => {\r\n    //const { userId } = getState().auth;\r\n    //const response = await api.post('/Clientes', { ...formValues, userId });\r\n    const response = await api.post('/Clientes', { ...formValues });\r\n\r\n    dispatch({ type: CREATE_CLIENTE, payload: response });\r\n    history.push('/');\r\n};\r\n\r\nexport const fetchClientes = () => async dispatch => {\r\n    const response = await api.get('/Clientes');\r\n    dispatch({ type: FETCH_CLIENTES, payload: response });\r\n};\r\n\r\nexport const fetchServicos = () => async dispatch => {\r\n    const response = await api.get('/servicos/nomes');\r\n    dispatch({ type: FETCH_SERVICOS, payload: response });\r\n};\r\n\r\nexport const createServico = () => async dispatch => {\r\n    const response = await api.post('/cabeleireiro/5caf9cabb066082354c1cb0a/servicos/');\r\n    console.log(response);\r\n    dispatch({ type: CREATE_SERVICO, payload: response });\r\n    history.push('/');\r\n};\r\n\r\n\r\n// export const createServico = formValues => async (dispatch, getState) => {\r\n//     //const { userId } = getState().auth;\r\n//     //const response = await api.post('/Clientes', { ...formValues, userId });\r\n//     const response = await api.post('/Anamnese', { ...formValues });\r\n\r\n//     dispatch({ type: CREATE_SERVICO, payload: response });\r\n//     history.push('/');\r\n// };\r\n\r\n// export function createCliente(props) {\r\n//     const url = \"/Clientes\";\r\n//     const request = api.post(url, props);\r\n\r\n//     return {\r\n//         type: CREATE_CLIENTE,\r\n//         payload: request\r\n//     };\r\n// }\r\n\r\n// export function fetchClientes() {\r\n//     const url = `/Clientes`;\r\n//     const request = api.get(url);\r\n\r\n//     return {\r\n//         type: FETCH_CLIENTES,\r\n//         payload: request\r\n//     };\r\n// }\r\n\r\n// export function fetchCabeleireiros() {\r\n//     const url = `/Cabeleireiros`;\r\n//     const request = api.get(url);\r\n\r\n//     return {\r\n//         type: FETCH_CABELEIREIROS,\r\n//         payload: request\r\n//     };\r\n// }\r\n","export const FETCH_CLIENTES = \"FETCH_CLIENTES\";\r\nexport const FETCH_CLIENTE = \"FETCH_CLIENTE\";\r\nexport const CREATE_CLIENTE = \"CREATE_CLIENTE\";\r\nexport const DELETE_CLIENTE = \"DELETE_CLIENTE\";\r\n\r\nexport const FETCH_SERVICOS = \"FETCH_SERVICOS\";\r\nexport const FETCH_SERVICO = \"FETCH_SERVICO\";\r\nexport const CREATE_SERVICO = \"CREATE_SERVICO\";\r\nexport const DELETE_SERVICO = \"DELETE_SERVICO\";\r\n\r\nexport const FETCH_PROCEDIMENTOS = \"FETCH_PROCEDIMENTOS\";\r\nexport const FETCH_PROCEDIMENTO = \"FETCH_PROCEDIMENTO\";\r\nexport const CREATE_PROCEDIMENTO = \"CREATE_PROCEDIMENTO\";\r\nexport const DELETE_PROCEDIMENTO = \"DELETE_PROCEDIMENTO\";\r\n\r\nexport const FETCH_CABELEIREIROS = \"FETCH_CABELEIREIROS\";\r\nexport const FETCH_CABELEIREIRO = \"FETCH_CABELEIREIRO\";\r\nexport const CREATE_CABELEIREIRO = \"CREATE_CABELEIREIRO\";\r\nexport const DELETE_CABELEIREIRO = \"DELETE_CABELEIREIRO\";\r\n","import React from \"react\";\r\n//import moment from \"moment\";\r\n\r\nconst ItemCliente = ({ clientes }) => {\r\n    //const key = (clientes.id).slice(-4);\r\n    //const key = clientes.id;\r\n    const nome = clientes.nome;\r\n    const telefone = clientes.Telefone;\r\n    //const cpf = clientes.CPF;\r\n    //const dataNasc = moment(clientes.DataNascimento).format('DD/MM/YYYY');\r\n    const email = clientes.Email;\r\n\r\n    return (\r\n        <div className=\"list-group-item list-group-item-action flex-column align-items-start\">\r\n            <div className=\"d-flex w-100 justify-content-between\">\r\n                <h5 className=\"mb-1\">{nome}</h5>\r\n                {/* <small>{dataNasc}</small> */}\r\n            </div>\r\n            <p className=\"mb-1\">{email}</p>\r\n            <p className=\"mb-1\">{telefone}</p>\r\n        </div>\r\n\r\n    );\r\n};\r\n\r\nexport default ItemCliente;\r\n","import _ from \"lodash\";\r\nimport React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { fetchClientes } from \"../actions/index\";\r\nimport ItemCliente from \"./ItemCliente\";\r\n\r\nclass ListaClientes extends Component {\r\n    componentWillMount() {\r\n        this.props.fetchClientes();\r\n    }\r\n\r\n    renderClientes() {\r\n        return _.map(this.props.clientes, clientes => {\r\n            return <ItemCliente key={clientes._id} clientes={clientes} />;\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n\r\n            <div className=\"list-group\">\r\n                {this.renderClientes()}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return { clientes: state.clientes };\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    { fetchClientes }\r\n)(ListaClientes);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { createCliente } from '../actions';\r\nimport ClienteForm from \"../components/clienteForm\";\r\nimport ListaClientes from \"../components/listaClientes\";\r\n\r\nclass Clientes extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <ClienteForm onSubmit={this.onSubmit} />\r\n                <ListaClientes />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect(\r\n    null,\r\n    { createCliente }\r\n)(Clientes);","import React from 'react';\r\nimport { Field, reduxForm } from 'redux-form';\r\n\r\nconst ServicoFormPage1 = (props) => {\r\n    const { handleSubmit, previousPage, clientes } = props\r\n\r\n    return (\r\n        <form className=\"container\" onSubmit={handleSubmit}>\r\n            <div className=\"text-center\"><h1>Cadastro de Serviço</h1></div>\r\n            <div className=\"form-group\">\r\n                <label className=\"col-3\">Data</label>\r\n                <div className=\"col-9\">\r\n                    <Field name=\"data\" component=\"input\" type=\"date\" />\r\n                </div>\r\n            </div>\r\n            <div className=\"form-group row\">\r\n                <label className=\"col-3\">Cliente</label>\r\n                <div className=\"col-9\">\r\n                    <Field name=\"cliente\" component=\"select\">\r\n                        {clientes}\r\n                    </Field>\r\n                </div>\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <label className=\"col-12\">Observações sobre o cliente</label>\r\n                <div className=\"col-12\">\r\n                    <Field name=\"anotacoes\" component=\"textarea\" />\r\n                    {/* <Field name=\"observacoes\" component=\"textarea\" /> */}\r\n                </div>\r\n            </div>\r\n            {/* <button type=\"button\" className=\"btn btn-secondary\" onClick={previousPage}>\r\n                Anterior\r\n                </button> */}\r\n            <button type=\"submit\" className=\"btn btn-success\" >\r\n                Próximo\r\n                </button>\r\n        </form >\r\n\r\n    )\r\n}\r\n\r\nexport default reduxForm({\r\n    form: 'servicoForm',                 // <------ same form name\r\n    destroyOnUnmount: false,        // <------ preserve form data\r\n    forceUnregisterOnUnmount: true  // <------ unregister fields on unmount\r\n\r\n})(ServicoFormPage1)","import React from 'react';\r\nimport { Field, reduxForm } from 'redux-form';\r\n\r\nconst ServicoFormPage2 = (props) => {\r\n    const { handleSubmit, previousPage, servicos, produtos } = props\r\n\r\n    return (\r\n        <form className=\"container\" onSubmit={handleSubmit}>\r\n            <div className=\"text-center\"><h1>Cadastro de Serviço</h1></div>\r\n            <div className=\"form-group row\">\r\n                <label className=\"col-3\">Serviço</label>\r\n                <div className=\"col-9\">\r\n                    {/* <Field name=\"servico\" component=\"select\"> */}\r\n                    <Field name=\"nome\" component=\"select\">\r\n                        {servicos}\r\n                    </Field>\r\n                </div>\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <label className=\"col-12\">Materiais utilizados</label>\r\n                <div className=\"col-12\">\r\n                    <Field name=\"materiais\" component=\"textarea\" />\r\n                    {/* <FormProdutos */}\r\n                    {/* <Field name=\"produto\" component=\"select\">\r\n                        <option>Selecione o servico</option>\r\n                        {produtos}\r\n                    </Field> */}\r\n                </div>\r\n            </div>\r\n            {/* <button type=\"button\" className=\"btn btn-secondary\" onClick={previousPage}>\r\n                Anterior\r\n                </button> */}\r\n            <button type=\"submit\" className=\"btn btn-success\" >\r\n                Concluído\r\n                </button>\r\n        </form >\r\n\r\n    )\r\n}\r\n\r\nexport default reduxForm({\r\n    form: 'servicoForm',                 // <------ same form name\r\n    destroyOnUnmount: false,        // <------ preserve form data\r\n    forceUnregisterOnUnmount: true  // <------ unregister fields on unmount\r\n\r\n})(ServicoFormPage2)","import _ from \"lodash\";\r\nimport React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Field, formValueSelector, reduxForm } from 'redux-form';\r\nimport { fetchClientes, createServico, fetchServicos } from '../actions/index';\r\n//import ServicoOptions from \"./servicoOptions\";\r\nimport ServicoFormPage1 from \"./servicoFormPage1\";\r\nimport ServicoFormPage2 from \"./servicoFormPage2\";\r\nlet history = require(\"history\").createBrowserHistory;\r\n\r\nfunction getDate() {\r\n    var currentTime = new Date(),\r\n        month = '' + (currentTime.getMonth() + 1),\r\n        day = '' + currentTime.getDate(),\r\n        year = currentTime.getFullYear();\r\n\r\n    if (month.length < 2) month = '0' + month;\r\n    if (day.length < 2) day = '0' + day;\r\n\r\n    return [year, month, day].join('-');\r\n}\r\n\r\nconst defaultValues = {\r\n    data: getDate()\r\n}\r\n\r\nclass ServicoForm extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.nextPage = this.nextPage.bind(this)\r\n        this.previousPage = this.previousPage.bind(this)\r\n        this.state = {\r\n            page: 1\r\n        }\r\n    }\r\n    nextPage() {\r\n        this.setState({ page: this.state.page + 1 })\r\n    }\r\n\r\n    previousPage() {\r\n        this.setState({ page: this.state.page - 1 })\r\n    }\r\n\r\n    componentWillMount() {\r\n        this.props.fetchClientes();\r\n        this.props.fetchServicos();\r\n    }\r\n\r\n    renderClientes() {\r\n        return _.map(this.props.clientes, clientes => {\r\n            return <option key={clientes._id} value={clientes.nome}>{clientes.nome}</option>;\r\n        });\r\n    }\r\n\r\n    renderServicos() {\r\n        let id = 0;\r\n        return _.map(this.props.servicos, servicos => {\r\n            return <option key={id++} value={servicos.nome}>{servicos.nome}</option>;\r\n        })\r\n        //this.renderProdutos(servicos.nome));\r\n    }\r\n\r\n    // renderProdutos(nome) {\r\n    //     console.log(this.props.servicos);\r\n    //     console.log(nome);\r\n\r\n    //     return _.map(this.props.servicos.produtos, produtos => {\r\n    //         return <ServicoOptions key={produtos.id} produtos={produtos}></ServicoOptions>\r\n    //     });\r\n    // }\r\n\r\n    onSubmit(props) {\r\n        this.props.createServico(props, () => {\r\n            history.push('/');\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const { handleSubmit } = this.props;\r\n        //const { renderClientes } = this.props;\r\n        const { page } = this.state\r\n        return (\r\n            <div>\r\n                {page === 1 && <ServicoFormPage1 onSubmit={this.nextPage} clientes={this.renderClientes()} />}\r\n                {page === 2 && (\r\n                    <ServicoFormPage2\r\n                        //produtos={this.renderProdutos()}\r\n                        servicos={this.renderServicos()}\r\n                        previousPage={this.previousPage}\r\n                        onSubmit={handleSubmit}\r\n                    />\r\n                )}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    //const selector = formValueSelector('servicoForm')\r\n    return {\r\n        initialValues: defaultValues,\r\n        clientes: state.clientes,\r\n        servicos: state.servicos,\r\n        produtos: state.produtos,\r\n        //selectedServico: selector(state, 'servico') \r\n    };\r\n}\r\n\r\n// Decorate with reduxForm(). It will read the initialValues prop provided by connect()\r\nServicoForm = reduxForm({\r\n    form: 'servicoForm'  // a unique identifier for this form\r\n})(ServicoForm)\r\n\r\n// You have to connect() to any reducers that you wish to connect to yourself\r\nServicoForm = connect(\r\n    mapStateToProps,\r\n    // state => ({\r\n    //     initialValues: defaultValues // pull initial values from account reducer\r\n    // }),\r\n    { fetchClientes, fetchServicos }\r\n)(ServicoForm)\r\n\r\nexport default ServicoForm","import React, { Component } from \"react\";\r\nimport ServicoForm from \"../components/servicoForm\";\r\n\r\nclass Anamnese extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <ServicoForm onSubmit={this.onSubmit} />\r\n            </div>)\r\n    }\r\n}\r\n\r\nexport default Anamnese;\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass Header extends Component {\r\n    render() {\r\n        return (\r\n            <header className=\"text-center\">\r\n                <ul className=\"nav justify-content-between\">\r\n                    <li className=\"nav-item\">\r\n                        <h5>Olá, Pricila</h5>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <Link to=\"/\">\r\n                            Início\r\n                    </Link>\r\n                    </li>\r\n                </ul>\r\n                <div className=\"header-logo\">\r\n                    <img src=\"/img/logo-tifs.png\" alt=\"\" />\r\n                </div>\r\n            </header>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Header;\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass Menu extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"menu\">\r\n                <div className=\"row d-flex justify-content-around\">\r\n                    <Link to=\"/Clientes\" className=\"btn btn-dark col-offset-2 col-4 col-md-2\">Clientes</Link>\r\n                    <Link to=\"/Anamnese\" className=\"btn btn-dark col-offset-2 col-4 col-md-2\">Anamnese</Link>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Menu;\r\n","import React, { Component } from \"react\";\r\nimport Menu from \"./Menu\";\r\n\r\nclass Home extends Component {\r\n    render() {\r\n        return (\r\n            <main className=\"container-fluid\">\r\n                <br />\r\n                <Menu />\r\n            </main>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Home;\r\n","import { combineReducers } from \"redux\";\r\nimport { reducer as formReducer } from \"redux-form\";\r\nimport ReducerCabeleireiros from \"./reducer_cabeleireiros\";\r\nimport ReducerClientes from \"./reducer_clientes\";\r\nimport ReducerServicos from \"./reducer_servicos\"\r\n\r\nconst rootReducer = combineReducers({\r\n    clientes: ReducerClientes,\r\n    cabeleireiros: ReducerCabeleireiros,\r\n    //servicos: ReducerServicos,\r\n    servicos: ReducerServicos,\r\n    form: formReducer\r\n});\r\n\r\nexport default rootReducer;\r\n","import _ from \"lodash\";\r\nimport { FETCH_CLIENTES, FETCH_CLIENTE, CREATE_CLIENTE, DELETE_CLIENTE } from \"../actions/types\";\r\n\r\nexport default function (state = {}, action) {\r\n    switch (action.type) {\r\n        case FETCH_CLIENTES:\r\n            return action.payload.data;\r\n        case FETCH_CLIENTE:\r\n            return { ...state, [action.payload.data.id]: action.payload.data };\r\n        case CREATE_CLIENTE:\r\n            return { ...state, [action.payload.data.id]: action.payload.data };\r\n        case DELETE_CLIENTE:\r\n            return _.omit(state, action.payload.data.id);\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import _ from \"lodash\";\r\nimport { FETCH_CABELEIREIROS, FETCH_CABELEIREIRO, CREATE_CABELEIREIRO, DELETE_CABELEIREIRO } from \"../actions/types\";\r\n\r\nexport default function (state = {}, action) {\r\n    switch (action.type) {\r\n        case FETCH_CABELEIREIROS:\r\n            return action.payload.data;\r\n        case FETCH_CABELEIREIRO:\r\n            return { ...state, [action.payload.data.id]: action.payload.data };\r\n        case CREATE_CABELEIREIRO:\r\n            return { ...state, [action.payload.data.id]: action.payload.data };\r\n        case DELETE_CABELEIREIRO:\r\n            return _.omit(state, action.payload.data.id);\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import _ from \"lodash\";\r\nimport { FETCH_SERVICOS, FETCH_SERVICO, CREATE_SERVICO, DELETE_SERVICO } from \"../actions/types\";\r\n\r\nexport default function (state = {}, action) {\r\n    switch (action.type) {\r\n        case FETCH_SERVICOS:\r\n            return action.payload.data;\r\n        case FETCH_SERVICO:\r\n            return { ...state, [action.payload.data.id]: action.payload.data };\r\n        case CREATE_SERVICO:\r\n            console.log(state);\r\n\r\n            return { ...state, [action.payload.data.id]: action.payload.data };\r\n        case DELETE_SERVICO:\r\n            return _.omit(state, action.payload.data.id);\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import \"bootstrap\";\r\nimport React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport { Router, Route, Switch } from \"react-router-dom\";\r\nimport { createStore, applyMiddleware, compose } from 'redux';\r\nimport reduxThunk from 'redux-thunk';\r\nimport App from \"./App\";\r\nimport Clientes from \"./containers/Clientes\";\r\nimport Anamnese from \"./containers/Anamnese\";\r\nimport Header from \"./containers/Header\";\r\nimport Home from \"./containers/Home\";\r\nimport reducers from \"./reducers\";\r\nimport history from './history'\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(\r\n    reducers,\r\n    composeEnhancers(applyMiddleware(reduxThunk))\r\n);\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <Router history={history}>\r\n            <App>\r\n                <Header />\r\n                <Switch>\r\n                    <Route exact path=\"/\" component={Home} />\r\n                    <Route path=\"/Clientes\" component={Clientes} />\r\n                    <Route path=\"/Anamnese\" component={Anamnese} />\r\n                </Switch>\r\n            </App>\r\n        </Router>\r\n    </Provider>,\r\n    document.querySelector(\"#root\")\r\n);\r\n\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}