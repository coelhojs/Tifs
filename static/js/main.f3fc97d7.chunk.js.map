{"version":3,"sources":["App.js","actions/index.js","history.js","actions/cliente.js","actions/types.js","forms/clienteForm.js","components/itemCliente.js","components/listaClientes.js","forms/produtoForm.js","containers/Clientes.js","actions/produto.js","components/itemProduto.js","components/listaProdutos.js","containers/Produtos.js","forms/servicoFormPage1.js","forms/servicoFormPage2.js","forms/servicoForm.js","actions/servico.js","containers/Servico.js","containers/Header.js","containers/Menu.js","containers/Home.js","reducers/index.js","reducers/reducer_clientes.js","reducers/reducer_cabeleireiros.js","reducers/reducer_produtos.js","reducers/reducer_servicos.js","serviceWorker.js","index.js"],"names":["App","react_default","a","createElement","this","props","children","Component","api","create","baseURL","createBrowserHistory","fetchClientes","_ref2","Object","asyncToGenerator","regenerator_default","mark","_callee2","dispatch","response","wrap","_context2","prev","next","get","sent","type","payload","stop","_x3","apply","arguments","history","require","ClienteForm","createCliente","push","_this$props","handleSubmit","pristine","reset","submitting","className","onSubmit","bind","Field","name","component","placeholder","map","sexoOption","value","key","disabled","onClick","reduxForm","form","connect","formValues","_ref","_callee","getState","_context","post","objectSpread","_x","_x2","ItemCliente","clientes","nome","telefone","Telefone","email","Email","ListaClientes","_","itemCliente","_id","renderClientes","max","min","state","Clientes","clienteForm","listaClientes","required","undefined","maxLength15","length","concat","minValue18","number","isNaN","Number","tooOld","ProdutoForm","createProduto","renderField","input","label","_ref$meta","meta","touched","error","warning","assign","validate","warn","ItemProduto","produtos","categoria","marca","linha","descricao","conteudo","medida","src","alt","ListaProdutos","fetchProdutos","itemProduto","scope","renderProdutos","Produtos","produtoForm","listaProdutos","destroyOnUnmount","forceUnregisterOnUnmount","servicos","defaultValues","data","currentTime","Date","month","getMonth","day","getDate","year","getFullYear","join","ServicoForm","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","nextPage","assertThisInitialized","previousPage","page","setState","fetchServicos","id","createServico","servicoFormPage1","servicoFormPage2","renderServicos","initialValues","Servico","servicoForm","Header","react_router_dom","to","Menu","Home","containers_Menu","rootReducer","combineReducers","action","defineProperty","omit","cabeleireiros","console","log","formReducer","Boolean","window","location","hostname","match","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","reducers","applyMiddleware","reduxThunk","ReactDOM","render","es","react_router","src_App_0","containers_Header","exact","path","document","querySelector","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.f3fc97d7.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport \"./App.css\";\r\n\r\nclass App extends Component {\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.props.children}\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default App;\r\n","import { create } from \"apisauce\";\r\n\r\nexport const api = create({\r\n    baseURL: \"https://sileo.serveo.net\"\r\n    // baseURL: \"localhost:3001\"\r\n});","import { createBrowserHistory } from 'history'\r\n\r\nexport default createBrowserHistory({\r\n    /* pass a configuration object here if needed */\r\n})","import { api } from \"./index\";\r\nimport history from '../history';\r\nimport { CREATE_CLIENTE, FETCH_CLIENTES } from './types';\r\n\r\nexport const createCliente = formValues => async (dispatch, getState) => {\r\n    const response = await api.post('/Clientes', { ...formValues });\r\n    dispatch({ type: CREATE_CLIENTE, payload: response });\r\n    history.push('/Clientes');\r\n};\r\n\r\nexport const fetchClientes = () => async dispatch => {\r\n    const response = await api.get('/Clientes');\r\n    dispatch({ type: FETCH_CLIENTES, payload: response });\r\n};\r\n","export const FETCH_CABELEIREIROS = \"FETCH_CABELEIREIROS\";\r\nexport const FETCH_CABELEIREIRO = \"FETCH_CABELEIREIRO\";\r\nexport const CREATE_CABELEIREIRO = \"CREATE_CABELEIREIRO\";\r\nexport const DELETE_CABELEIREIRO = \"DELETE_CABELEIREIRO\";\r\n\r\nexport const FETCH_CLIENTES = \"FETCH_CLIENTES\";\r\nexport const FETCH_CLIENTE = \"FETCH_CLIENTE\";\r\nexport const CREATE_CLIENTE = \"CREATE_CLIENTE\";\r\nexport const DELETE_CLIENTE = \"DELETE_CLIENTE\";\r\n\r\nexport const FETCH_PRODUTOS = \"FETCH_PRODUTOS\";\r\nexport const FETCH_PRODUTO = \"FETCH_PRODUTO\";\r\nexport const CREATE_PRODUTO = \"CREATE_PRODUTO\";\r\nexport const DELETE_PRODUTO = \"DELETE_PRODUTO\";\r\n\r\nexport const FETCH_SERVICOS = \"FETCH_SERVICOS\";\r\nexport const FETCH_SERVICO = \"FETCH_SERVICO\";\r\nexport const CREATE_SERVICO = \"CREATE_SERVICO\";\r\nexport const DELETE_SERVICO = \"DELETE_SERVICO\";\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { createCliente } from '../actions/cliente';\r\nimport '../style/general.scss';\r\n\r\nlet history = require(\"history\").createBrowserHistory;\r\n\r\nclass ClienteForm extends Component {\r\n    onSubmit(props) {\r\n        this.props.createCliente(props, () => {\r\n            history.push('/');\r\n        });\r\n\r\n    }\r\n\r\n    render() {\r\n        const sexo = [\"Feminino\", \"Masculino\", \"Outro\", \"Prefiro não informar\"];\r\n        const { handleSubmit, pristine, reset, submitting } = this.props;\r\n        return (\r\n            <form className=\"container\" onSubmit={handleSubmit(this.onSubmit.bind(this))}>\r\n            <div className=\"text-center\"><h1>Cadastro de Cliente</h1></div>\r\n            <hr/>\r\n                <div className=\"form-group row\">\r\n                    <label className=\"col-2\">Nome</label>\r\n                    <div className=\"col-10\">\r\n                        <Field name=\"nome\" className=\"form-control\" component=\"input\" type=\"text\"\r\n                            placeholder=\"Nome completo\"\r\n                        />\r\n                    </div>\r\n                </div>\r\n                <div className=\"form-group row\">\r\n                    <label className=\"col-2\">Sexo</label>\r\n                    <div className=\"col-10\">\r\n                        <Field name=\"sexo\" className=\"form-control\" component=\"select\">\r\n                            {sexo.map(sexoOption =>\r\n                                <option value={sexoOption} key={sexoOption}>{sexoOption}</option>)}\r\n                        </Field></div>\r\n                </div>\r\n                <div className=\"form-group row\">\r\n                    <label className=\"col-2\">CPF</label>\r\n                    <div className=\"col-10\">\r\n                        <Field name=\"cpf\" className=\"form-control\" component=\"input\" type=\"number\" placeholder=\"\"\r\n                        />\r\n                    </div>\r\n                </div>\r\n                <div className=\"form-group row\">\r\n                    <label className=\"col-4\">Data de nascimento</label>\r\n                    <div className=\"col-8\">\r\n                        <Field name=\"dataNascimento\" className=\"form-control\" component=\"input\" type=\"date\"\r\n                            placeholder=\"\" />\r\n                    </div>\r\n                </div>\r\n                <div className=\"form-group row\">\r\n                    <label className=\"col-2\">Telefone</label>\r\n                    <div className=\"col-10\">\r\n                        <Field name=\"telefone\" className=\"form-control\" component=\"input\" type=\"text\"\r\n                            placeholder=\"\" />\r\n                    </div>\r\n                </div>\r\n                <div className=\"form-group row\">\r\n                    <label className=\"col-2\">E-mail</label>\r\n                    <div className=\"col-10\">\r\n                        <Field name=\"email\" className=\"form-control\" component=\"input\" type=\"email\" placeholder=\"\"\r\n                        />\r\n                    </div>\r\n                </div>\r\n                <div className=\"form-group formCheck\">\r\n                    <label className=\"col-12\">Você já teve episódios de alergia a algum produto cosmético?</label>\r\n                    <div className=\"form-check form-check-inline\" >\r\n                        <label className=\"form-check-label formButton1\">\r\n                            <Field name=\"alergias\" className=\"form-check-input\" component=\"input\" type=\"radio\"\r\n                                value=\"true\" />\r\n                            Sim</label>\r\n                        <label className=\"form-check-label formButton2\">\r\n                            <Field name=\"alergias\" className=\"form-check-input\" component=\"input\" type=\"radio\"\r\n                                value=\"false\" />\r\n                            Não</label>\r\n                    </div>\r\n                </div>\r\n                <div className=\"form-group formCheck\">\r\n                    <label className=\"col-12\">Você está em período de gravidez?</label>\r\n                    <div className=\"form-check form-check-inline\">\r\n                        <label className=\"form-check-label formButton1\">\r\n                            <Field name=\"gestante\" className=\"form-check-input\" component=\"input\" type=\"radio\"\r\n                                value=\"true\" />\r\n                            Sim</label>\r\n                        <label className=\"form-check-label formButton2\">\r\n                            <Field name=\"gestante\" className=\"form-check-input\" component=\"input\" type=\"radio\"\r\n                                value=\"false\" />\r\n                            Não\r\n                            </label>\r\n                    </div>\r\n                </div>\r\n                <br />\r\n                <div className=\"button-group d-flex justify-content-around\">\r\n                    <button type=\"submit\" className=\"btn btn-success\" disabled={pristine || submitting}>\r\n                        Cadastrar\r\n                        </button>\r\n                    <button type=\"button\" className=\"btn btn-danger\" disabled={pristine || submitting}\r\n                        onClick={reset}>\r\n                        Cancelar\r\n                        </button>\r\n                </div>\r\n                <br />\r\n            </form>\r\n        );\r\n    }\r\n}\r\n\r\n// reduxForm: 1st is form config\r\n// connect: first argument is mapStateToProps, 2nd is mapDispatchToProps\r\nexport default reduxForm({\r\n    form: 'clienteForm'\r\n})(\r\n    connect(null, { createCliente })(ClienteForm)\r\n);\r\n","import React from \"react\";\r\n//import moment from \"moment\";\r\n\r\nconst ItemCliente = ({ clientes }) => {\r\n    //const key = (clientes.id).slice(-4);\r\n    //const key = clientes.id;\r\n    const nome = clientes.nome;\r\n    const telefone = clientes.Telefone;\r\n    //const cpf = clientes.CPF;\r\n    //const dataNasc = moment(clientes.DataNascimento).format('DD/MM/YYYY');\r\n    const email = clientes.Email;\r\n\r\n    return (\r\n        <div className=\"list-group-item list-group-item-action flex-column align-items-start\">\r\n            <div className=\"d-flex w-100 justify-content-between\">\r\n                <h5 className=\"mb-1\">{nome}</h5>\r\n                {/* <small>{dataNasc}</small> */}\r\n            </div>\r\n            <p className=\"mb-1\">{email}</p>\r\n            <p className=\"mb-1\">{telefone}</p>\r\n        </div>\r\n\r\n    );\r\n};\r\n\r\nexport default ItemCliente;","import _ from \"lodash\";\r\nimport React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { fetchClientes } from \"../actions/cliente\";\r\nimport ItemCliente from \"./itemCliente\";\r\n\r\nclass ListaClientes extends Component {\r\n    componentWillMount() {\r\n        this.props.fetchClientes();\r\n    }\r\n\r\n    renderClientes() {\r\n        return _.map(this.props.clientes, clientes => {\r\n            return <ItemCliente key={clientes._id} clientes={clientes} />;\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"list-group\">\r\n                {this.renderClientes()}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return { clientes: state.clientes };\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    { fetchClientes }\r\n)(ListaClientes);\r\n","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { createProduto } from '../actions/produto';\r\nimport '../style/general.scss';\r\n\r\nlet history = require(\"history\").createBrowserHistory;\r\n\r\nconst required = value => value ? undefined : 'Campo obrigatório'\r\nconst maxLength = max => value =>\r\n    value && value.length > max ? `Este campo recebe no máximo ${max} caracteres` : undefined\r\nconst maxLength15 = maxLength(30)\r\nconst minValue = min => value =>\r\n    value && value < min ? `Must be at least ${min}` : undefined\r\nconst minValue18 = minValue(1)\r\nconst number = value => value && isNaN(Number(value)) ? 'Este campo permite somente números' : undefined\r\nconst tooOld = value =>\r\n    value && value > 5000 ? 'O valor máximo permitido é 5000' : undefined\r\n\r\nclass ProdutoForm extends Component {\r\n    onSubmit(props) {\r\n        this.props.createProduto(props, () => {\r\n            history.push('/Produtos');\r\n        });\r\n    }\r\n    render() {\r\n        const renderField = ({ input, label, type, meta: { touched, error, warning } }) => (\r\n            <div>\r\n                <label>{label}</label>\r\n                <div>\r\n                    <input {...input} placeholder={label} type={type} />\r\n                    {touched && ((error && <span>{error}</span>) || (warning && <span>{warning}</span>))}\r\n                </div>\r\n            </div>\r\n        )\r\n\r\n        const { handleSubmit, pristine, reset, submitting } = this.props;\r\n        return (\r\n            <form className=\"container formMobileProd\" onSubmit={handleSubmit(this.onSubmit.bind(this))}>\r\n                <div className=\"text-center\"><h1>Cadastro de Produto</h1></div>\r\n                <hr />\r\n                {/* <div className=\"form-group row\">\r\n                    <label className=\"col-2\">Categoria</label>\r\n                    <div className=\"col-10\">\r\n                        <Field name=\"categoria\" className=\"form-control\" component=\"select\">\r\n                            <option value=\"shampoo\" defaultValue>shampoo</option>\r\n                            <option value=\"coloração\">coloração</option>\r\n                        </Field>\r\n                    </div>\r\n                </div> */}\r\n                <div className=\"form-group row\">\r\n                    <label className=\"col-2\">Categoria</label>\r\n                    <div className=\"col-10\">\r\n                        <Field name=\"categoria\" className=\"form-control\" component={renderField} validate={[required, maxLength15]} />\r\n                    </div>\r\n                </div>\r\n                <div className=\"form-group row\">\r\n                    <label className=\"col-2\">Marca</label>\r\n                    <div className=\"col-10\">\r\n                        <Field name=\"marca\" className=\"form-control\" component={renderField} type=\"text\"\r\n                            placeholder=\"Ex.: Loreal\" validate={[required, maxLength15]}\r\n                        />\r\n                    </div>\r\n                </div>\r\n                <div className=\"form-group row\">\r\n                    <label className=\"col-2\">Linha</label>\r\n                    <div className=\"col-10\">\r\n                        <Field name=\"linha\" className=\"form-control\" component={renderField} type=\"text\"\r\n                            placeholder=\"Ex.: Kids\" validate={[required, maxLength15]}\r\n                        />\r\n                    </div>\r\n                </div>\r\n                <div className=\"form-group row\">\r\n                    <label className=\"col-2\">Descrição</label>\r\n                    <div className=\"col-10\">\r\n                        <Field name=\"descricao\" className=\"form-control\" component={renderField} type=\"text\" validate={[required, maxLength15]} />\r\n                    </div>\r\n                </div>\r\n                <div className=\"form-group row\">\r\n                    <label className=\"col-2\">Conteúdo</label>\r\n                    <div className=\"col-10\">\r\n                        <Field name=\"conteudo\" className=\"form-control\" component={renderField} type=\"number\"\r\n                            placeholder=\"500\" validate={[required, number, minValue18]} warn={tooOld}\r\n                        />\r\n                    </div>\r\n                </div>\r\n                <div className=\"form-group row\">\r\n                    <label className=\"col-2\">Medida</label>\r\n                    <div className=\"col-10\">\r\n                        {/* <Field name=\"medida\" className=\"form-control\" component=\"select\">\r\n                            <option value=\"ml\">ml</option>\r\n                            <option value=\"l\">l</option>\r\n                            <option value=\"mg\">mg</option>\r\n                            <option value=\"g\">g</option>\r\n                            <option value=\"kg\">kg</option>\r\n                        </Field> */}\r\n                        <Field name=\"medida\" className=\"form-control\" component={renderField} validate={[required, maxLength15]} />\r\n                    </div>\r\n                </div>\r\n                <br />\r\n                <div className=\"button-group d-flex justify-content-around\">\r\n                    <button type=\"submit\" className=\"btn btn-success\" disabled={pristine || submitting}\r\n                        onSubmit={reset}>\r\n                        Cadastrar\r\n                        </button>\r\n                    <button type=\"button\" className=\"btn btn-danger\" disabled={pristine || submitting} onClick={reset}>\r\n                        Cancelar\r\n                        </button>\r\n                </div>\r\n                <br />\r\n                {/* <p className=\"text-center\">Dúvidas ao cadastrar o produto? <a href=\"\">Clique aqui</a></p> */}\r\n            </form>\r\n        );\r\n    }\r\n}\r\n\r\n//reduxForm: 1st is form config\r\n//connect: first argument is mapStateToProps, 2nd is mapDispatchToProps\r\nexport default reduxForm({\r\n    form: 'produtoForm'\r\n})(\r\n    connect(null, { createProduto })(ProdutoForm)\r\n);","import React, { Component } from 'react';\r\nimport ClienteForm from \"../forms/clienteForm\";\r\nimport ListaClientes from \"../components/listaClientes\";\r\n\r\nclass Clientes extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <ClienteForm onSubmit={this.onSubmit} />\r\n                <ListaClientes />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Clientes;","import { api } from \"./index\";\r\nimport history from '../history';\r\nimport { CREATE_PRODUTO, FETCH_PRODUTO, FETCH_PRODUTOS, DELETE_PRODUTO } from './types';\r\n\r\nexport const createProduto = formValues => async (dispatch, getState) => {\r\n    const response = await api.post('/Produtos', { ...formValues });\r\n    dispatch({ type: CREATE_PRODUTO, payload: response });\r\n    history.push('/Produtos');\r\n};\r\n\r\nexport const fetchProdutos = () => async dispatch => {\r\n    const response = await api.get('/Produtos');\r\n    dispatch({ type: FETCH_PRODUTOS, payload: response });\r\n};\r\n\r\nexport const fetchProduto = () => async dispatch => {\r\n    const response = await api.get('/Produtos/:id');\r\n    dispatch({ type: FETCH_PRODUTO, payload: response });\r\n};\r\n\r\nexport const deleteProdutos = id => async dispatch => {\r\n    const response = await api.delete(`/Produtos/${id}`);\r\n    dispatch({ type: DELETE_PRODUTO, payload: id });\r\n    console.log(response);\r\n    \r\n    history.push('/Produtos');\r\n};","import React from \"react\";\r\n// import ActionButton from \"../components/actionButton\";\r\nimport { deleteProdutos } from \"../actions/produto\";\r\n\r\nconst ItemProduto = ({ produtos }) => {\r\n    const key = produtos._id;\r\n    const categoria = produtos.categoria;\r\n    const marca = produtos.marca;\r\n    const linha = produtos.linha;\r\n    const descricao = produtos.descricao;\r\n    const conteudo = produtos.conteudo;\r\n    const medida = produtos.medida;\r\n\r\n    return (\r\n        <tr>\r\n            <td>{key}</td>\r\n            <td>{categoria}</td>\r\n            <td>{marca}</td>\r\n            <td>{linha}</td>\r\n            <td>{descricao}</td>\r\n            <td>{conteudo}</td>\r\n            <td>{medida}</td>\r\n            {/* <td><span><a href=\"\"><img src=\"/img/logo/edit.png\" alt=\"Editar produto\" />Editar produto</a></span></td> */}\r\n            <td> <img src=\"/img/icon/delete.png\" alt=\"Remover produto\" /></td>\r\n        </tr>\r\n    );\r\n};\r\n\r\nexport default ItemProduto;\r\n\r\n\r\n","import _ from \"lodash\";\r\nimport React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { fetchProdutos } from \"../actions/produto\";\r\nimport ItemProduto from \"./itemProduto\";\r\n\r\nclass ListaProdutos extends Component {\r\n    componentWillMount() {\r\n        this.props.fetchProdutos();\r\n    }\r\n\r\n    renderProdutos() {\r\n        return _.map(this.props.produtos, produtos => {\r\n            return <ItemProduto key={produtos._id} produtos={produtos} />;\r\n        });\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <table className=\"table\">\r\n                <thead>\r\n                    <tr>\r\n                        <th scope=\"col-2\">ID</th>\r\n                        <th scope=\"col-1\">Categoria</th>\r\n                        <th scope=\"col-2\">Marca</th>\r\n                        <th scope=\"col-2\">Linha</th>\r\n                        <th scope=\"col-3\">Descricao</th>\r\n                        <th scope=\"col\">Conteúdo</th>\r\n                        <th scope=\"col\">Medida</th>\r\n                        <th scope=\"col\"><strong>Opções</strong></th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {this.renderProdutos()}\r\n                </tbody>\r\n            </table>\r\n        );\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return { produtos: state.produtos };\r\n}\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    { fetchProdutos }\r\n)(ListaProdutos);\r\n","import React, { Component } from 'react';\r\nimport ProdutoForm from \"../forms/produtoForm\";\r\nimport ListaProdutos from '../components/listaProdutos';\r\n\r\nclass Produtos extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <ProdutoForm onSubmit={this.onSubmit} />\r\n                <ListaProdutos />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Produtos;","import React from 'react';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport '../style/general.scss';\r\n\r\nconst ServicoFormPage1 = (props) => {\r\n    const { handleSubmit, clientes } = props\r\n\r\n    return (\r\n        <form className=\"container\" onSubmit={handleSubmit}>\r\n            <div className=\"text-center\"><h1>Cadastro de Serviço</h1></div>\r\n            <hr/>\r\n            <div className=\"form-group row\">\r\n                    <label className=\"col-2\">Data</label>\r\n                    <div className=\"col-10\">\r\n                        <Field name=\"data\" className=\"form-control\" component=\"input\" type=\"date\"\r\n                            placeholder=\"\" />\r\n                    </div>\r\n                </div>\r\n\r\n            <div className=\"form-group row\">\r\n                    <label className=\"col-2\">Cliente</label>\r\n                    <div className=\"col-10\">\r\n                        <Field name=\"cliente\" className=\"form-control\" component=\"select\">\r\n                        {clientes}\r\n                        </Field></div>\r\n                </div>\r\n            <div className=\"form-group textAreaService\">\r\n                <label className=\"col-12 text-center\">Observações sobre o cliente</label>\r\n                <div className=\"col-12\" >\r\n                    <Field name=\"anotacoes\" component=\"textarea\" />\r\n                    {/* <Field name=\"observacoes\" component=\"textarea\" /> */}\r\n                </div>\r\n            </div>\r\n            {/* <button type=\"button\" className=\"btn btn-secondary\" onClick={previousPage}>\r\n                Anterior\r\n                </button> */}\r\n            <button type=\"submit\" className=\"btn btn-success buttonService\">\r\n                Próximo\r\n                </button>\r\n        </form >\r\n\r\n    )\r\n}\r\n\r\nexport default reduxForm({\r\n    form: 'servicoForm',                 // <------ same form name\r\n    destroyOnUnmount: false,        // <------ preserve form data\r\n    forceUnregisterOnUnmount: true  // <------ unregister fields on unmount\r\n\r\n})(ServicoFormPage1)","import React from 'react';\r\nimport { Field, reduxForm } from 'redux-form';\r\n\r\nconst ServicoFormPage2 = (props) => {\r\n    const { handleSubmit, servicos } = props\r\n\r\n    return (\r\n        <form className=\"container\" onSubmit={handleSubmit}>\r\n            <div className=\"text-center\"><h1>Cadastro de Serviço</h1></div>\r\n            <div className=\"form-group row\">\r\n                <label className=\"col-3\">Serviço</label>\r\n                <div className=\"col-9\">\r\n                    {/* <Field name=\"servico\" component=\"select\"> */}\r\n                    <Field name=\"nome\" component=\"select\">\r\n                        {servicos}\r\n                    </Field>\r\n                </div>\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <label className=\"col-12\">Materiais utilizados</label>\r\n                <div className=\"col-12\">\r\n                    <Field name=\"materiais\" component=\"textarea\" />\r\n                    {/* <FormProdutos */}\r\n                    {/* <Field name=\"produto\" component=\"select\">\r\n                        <option>Selecione o servico</option>\r\n                        {produtos}\r\n                    </Field> */}\r\n                </div>\r\n            </div>\r\n            {/* <button type=\"button\" className=\"btn btn-secondary\" onClick={previousPage}>\r\n                Anterior\r\n                </button> */}\r\n            <button type=\"submit\" className=\"btn btn-success\" >\r\n                Concluído\r\n                </button>\r\n        </form >\r\n\r\n    )\r\n}\r\n\r\nexport default reduxForm({\r\n    form: 'servicoForm',                 // <------ same form name\r\n    destroyOnUnmount: false,        // <------ preserve form data\r\n    forceUnregisterOnUnmount: true  // <------ unregister fields on unmount\r\n\r\n})(ServicoFormPage2)","import _ from \"lodash\";\r\nimport React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { reduxForm } from 'redux-form';\r\nimport { fetchClientes } from '../actions/cliente';\r\nimport { fetchServicos } from '../actions/servico';\r\n//import ServicoOptions from \"./servicoOptions\";\r\nimport ServicoFormPage1 from \"./servicoFormPage1\";\r\nimport ServicoFormPage2 from \"./servicoFormPage2\";\r\nlet history = require(\"history\").createBrowserHistory;\r\n\r\nfunction getDate() {\r\n    var currentTime = new Date(),\r\n        month = '' + (currentTime.getMonth() + 1),\r\n        day = '' + currentTime.getDate(),\r\n        year = currentTime.getFullYear();\r\n\r\n    if (month.length < 2) month = '0' + month;\r\n    if (day.length < 2) day = '0' + day;\r\n\r\n    return [year, month, day].join('-');\r\n}\r\n\r\nconst defaultValues = {\r\n    data: getDate()\r\n}\r\n\r\nclass ServicoForm extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.nextPage = this.nextPage.bind(this)\r\n        this.previousPage = this.previousPage.bind(this)\r\n        this.state = {\r\n            page: 1\r\n        }\r\n    }\r\n    nextPage() {\r\n        this.setState({ page: this.state.page + 1 })\r\n    }\r\n\r\n    previousPage() {\r\n        this.setState({ page: this.state.page - 1 })\r\n    }\r\n\r\n    componentWillMount() {\r\n        this.props.fetchClientes();\r\n        this.props.fetchServicos();\r\n    }\r\n\r\n    renderClientes() {\r\n        return _.map(this.props.clientes, clientes => {\r\n            return <option key={clientes._id} value={clientes.nome}>{clientes.nome}</option>;\r\n        });\r\n    }\r\n\r\n    renderServicos() {\r\n        let id = 0;\r\n        return _.map(this.props.servicos, servicos => {\r\n            return <option key={id++} value={servicos.nome}>{servicos.nome}</option>;\r\n        })\r\n        //this.renderProdutos(servicos.nome));\r\n    }\r\n\r\n    // renderProdutos(nome) {\r\n    //     console.log(this.props.servicos);\r\n    //     console.log(nome);\r\n\r\n    //     return _.map(this.props.servicos.produtos, produtos => {\r\n    //         return <ServicoOptions key={produtos.id} produtos={produtos}></ServicoOptions>\r\n    //     });\r\n    // }\r\n\r\n    onSubmit(props) {\r\n        this.props.createServico(props, () => {\r\n            history.push('/');\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const { handleSubmit } = this.props;\r\n        //const { renderClientes } = this.props;\r\n        const { page } = this.state\r\n        return (\r\n            <div>\r\n                {page === 1 && <ServicoFormPage1 onSubmit={this.nextPage} clientes={this.renderClientes()} />}\r\n                {page === 2 && (\r\n                    <ServicoFormPage2\r\n                        //produtos={this.renderProdutos()}\r\n                        servicos={this.renderServicos()}\r\n                        previousPage={this.previousPage}\r\n                        onSubmit={handleSubmit}\r\n                    />\r\n                )}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    //const selector = formValueSelector('servicoForm')\r\n    return {\r\n        initialValues: defaultValues,\r\n        clientes: state.clientes,\r\n        servicos: state.servicos,\r\n        produtos: state.produtos,\r\n        //selectedServico: selector(state, 'servico') \r\n    };\r\n}\r\n\r\n// Decorate with reduxForm(). It will read the initialValues prop provided by connect()\r\nServicoForm = reduxForm({\r\n    form: 'servicoForm'  // a unique identifier for this form\r\n})(ServicoForm)\r\n\r\n// You have to connect() to any reducers that you wish to connect to yourself\r\nServicoForm = connect(\r\n    mapStateToProps,\r\n    // state => ({\r\n    //     initialValues: defaultValues // pull initial values from account reducer\r\n    // }),\r\n    { fetchClientes, fetchServicos }\r\n)(ServicoForm)\r\n\r\nexport default ServicoForm","import { api } from \"./index\";\r\nimport history from '../history';\r\nimport { CREATE_SERVICO, FETCH_SERVICOS } from './types';\r\n\r\nexport const fetchServicos = () => async dispatch => {\r\n    const response = await api.get('/servicos/nomes');\r\n    dispatch({ type: FETCH_SERVICOS, payload: response });\r\n};\r\n\r\nexport const createServico = () => async dispatch => {\r\n    const response = await api.post('/cabeleireiro/5caf9cabb066082354c1cb0a/servicos/');\r\n    dispatch({ type: CREATE_SERVICO, payload: response });\r\n    history.push('/');\r\n};\r\n","import React, { Component } from \"react\";\r\nimport ServicoForm from \"../forms/servicoForm\";\r\n\r\nclass Servico extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <ServicoForm onSubmit={this.onSubmit} />\r\n            </div>)\r\n    }\r\n}\r\n\r\nexport default Servico;\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass Header extends Component {\r\n    render() {\r\n        return (\r\n            <header className=\"text-center\">\r\n                <ul className=\"nav justify-content-between\">\r\n                    <li className=\"nav-item\">\r\n                        <h5>Olá, Pricila</h5>\r\n                    </li>\r\n                    <li className=\"nav-item\">\r\n                        <Link to=\"/\">\r\n                            Início\r\n                    </Link>\r\n                    </li>\r\n                </ul>\r\n                <div className=\"header-logo\">\r\n                    <img src=\"/img/logo-tifs.png\" alt=\"\" />\r\n                </div>\r\n            </header>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Header;\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass Menu extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"menu\">\r\n                <div className=\"row d-flex justify-content-around\">\r\n                    <Link to=\"/Clientes\" className=\"btn btn-dark col-3\">Clientes</Link>\r\n                    <Link to=\"/Servico\" className=\"btn btn-dark col-3 offset-1\">Servico</Link>\r\n                    <Link to=\"/Produtos\" className=\"btn btn-dark col-3 offset-1\">Produtos</Link>\r\n                </div>\r\n                <br/>\r\n                <div className=\"row d-flex justify-content-around\">\r\n                    <button className=\"btn btn-dark col-3\" disabled>Cabeleireiro</button>\r\n                    <button className=\"btn btn-dark col-3 offset-1\" disabled>Agenda</button>\r\n                    <button className=\"btn btn-dark col-3 offset-1\" disabled>Relatórios</button>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Menu;\r\n","import React, { Component } from \"react\";\r\nimport Menu from \"./Menu\";\r\n\r\nclass Home extends Component {\r\n    render() {\r\n        return (\r\n            <main className=\"container-fluid\">\r\n                <br />\r\n                <Menu />\r\n            </main>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Home;\r\n","import { combineReducers } from \"redux\";\r\nimport { reducer as formReducer } from \"redux-form\";\r\nimport ReducerCabeleireiros from \"./reducer_cabeleireiros\";\r\nimport ReducerClientes from \"./reducer_clientes\";\r\nimport ReducerProdutos from \"./reducer_produtos\";\r\nimport ReducerServicos from \"./reducer_servicos\"\r\n\r\nconst rootReducer = combineReducers({\r\n    clientes: ReducerClientes,\r\n    cabeleireiros: ReducerCabeleireiros,\r\n    produtos: ReducerProdutos,\r\n    servicos: ReducerServicos,\r\n    form: formReducer\r\n});\r\n\r\nexport default rootReducer;\r\n","import _ from \"lodash\";\r\nimport { FETCH_CLIENTES, FETCH_CLIENTE, CREATE_CLIENTE, DELETE_CLIENTE } from \"../actions/types\";\r\n\r\nexport default function (state = {}, action) {\r\n    switch (action.type) {\r\n        case FETCH_CLIENTES:\r\n            return action.payload.data;\r\n        case FETCH_CLIENTE:\r\n            return { ...state, [action.payload.data.id]: action.payload.data };\r\n        case CREATE_CLIENTE:\r\n            return { ...state, [action.payload.data.id]: action.payload.data };\r\n        case DELETE_CLIENTE:\r\n            return _.omit(state, action.payload.data.id);\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import _ from \"lodash\";\r\nimport { FETCH_CABELEIREIROS, FETCH_CABELEIREIRO, CREATE_CABELEIREIRO, DELETE_CABELEIREIRO } from \"../actions/types\";\r\n\r\nexport default function (state = {}, action) {\r\n    switch (action.type) {\r\n        case FETCH_CABELEIREIROS:\r\n            return action.payload.data;\r\n        case FETCH_CABELEIREIRO:\r\n            return { ...state, [action.payload.data.id]: action.payload.data };\r\n        case CREATE_CABELEIREIRO:\r\n            return { ...state, [action.payload.data.id]: action.payload.data };\r\n        case DELETE_CABELEIREIRO:\r\n            return _.omit(state, action.payload.data.id);\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import _ from \"lodash\";\r\nimport { FETCH_PRODUTOS, FETCH_PRODUTO, CREATE_PRODUTO, DELETE_PRODUTO } from \"../actions/types\";\r\n\r\nexport default function (state = {}, action) {\r\n    switch (action.type) {\r\n        case CREATE_PRODUTO:\r\n            console.log(action.payload.data);\r\n            return { ...state, [action.payload.data.id]: action.payload.data };\r\n        case FETCH_PRODUTOS:\r\n            return action.payload.data;\r\n        case FETCH_PRODUTO:\r\n            return { ...state, [action.payload.data.id]: action.payload.data };\r\n        case DELETE_PRODUTO:\r\n            return _.omit(state, action.payload.data.id);\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import _ from \"lodash\";\r\nimport { FETCH_SERVICOS, FETCH_SERVICO, CREATE_SERVICO, DELETE_SERVICO } from \"../actions/types\";\r\n\r\nexport default function (state = {}, action) {\r\n    switch (action.type) {\r\n        case FETCH_SERVICOS:\r\n            return action.payload.data;\r\n        case FETCH_SERVICO:\r\n            return { ...state, [action.payload.data.id]: action.payload.data };\r\n        case CREATE_SERVICO:\r\n            return { ...state, [action.payload.data.id]: action.payload.data };\r\n        case DELETE_SERVICO:\r\n            return _.omit(state, action.payload.data.id);\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import \"bootstrap\";\r\nimport React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport { Router, Route, Switch } from \"react-router-dom\";\r\nimport { createStore, applyMiddleware, compose } from 'redux';\r\nimport reduxThunk from 'redux-thunk';\r\nimport App from \"./App\";\r\nimport Clientes from \"./containers/Clientes\";\r\nimport Produtos from \"./containers/Produtos\"\r\nimport Servico from \"./containers/Servico\";\r\nimport Header from \"./containers/Header\";\r\nimport Home from \"./containers/Home\";\r\nimport reducers from \"./reducers\";\r\nimport history from './history'\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(\r\n    reducers,\r\n    composeEnhancers(applyMiddleware(reduxThunk))\r\n);\r\n\r\nReactDOM.render(\r\n    <Provider store={store}>\r\n        <Router history={history}>\r\n            <App>\r\n                <Header />\r\n                <Switch>\r\n                    <Route exact path=\"/\" component={Home} />\r\n                    <Route path=\"/Clientes\" component={Clientes} />\r\n                    <Route path=\"/Produtos\" component={Produtos} />\r\n                    <Route path=\"/Servico\" component={Servico} />\r\n                </Switch>\r\n            </App>\r\n        </Router>\r\n    </Provider>,\r\n    document.querySelector(\"#root\")\r\n);\r\n\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}